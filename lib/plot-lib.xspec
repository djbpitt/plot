<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:djb="http://www.obdurodon.org"
    xmlns:f="http://www.obdurodon.org/function-variables" stylesheet="plot-lib.xsl"
    run-as="external">

    <x:scenario label="Scenario for testing function validate-points">
        <x:call function="djb:validate-points"/>
        <x:scenario label="with valid input (at least three, no white-space, monotonic X)">
            <x:call>
                <x:param name="f:point-pairs" select="'1,2', '3,4', '5,6'"/>
            </x:call>
            <x:expect
                label="Valid points (at least three, correct format, no white-space) should pass"
                select="true()"/>
        </x:scenario>
        <x:scenario label="with too few points">
            <x:call>
                <x:param name="f:point-pairs" select="'1,2', '3,4'"/>
            </x:call>
            <x:expect label="Fewer than three points should fail" select="false()"/>
        </x:scenario>
        <x:scenario label="with non-monotonic X">
            <x:call>
                <x:param name="f:point-pairs" select="'1,2', '5,4', '3,6'"/>
            </x:call>
            <x:expect label="Non-monotonic X should fail" select="false()"/>
        </x:scenario>
        <x:scenario label="with incorrect white-space">
            <x:call>
                <x:param name="f:point-pairs" select="'1, 2', '3,4', '5,6'"/>
            </x:call>
            <x:expect label="White space inside point should fail" select="false()"/>
        </x:scenario>
    </x:scenario>

    <x:scenario label="Scenario for testing function random-sequence">
        <x:call function="djb:random-sequence">
            <x:param name="count" select="100"/>
        </x:call>
        <x:expect label="Count should equal 100, ranging between 0 and 1"
            test="count($x:result) eq 100 and min($x:result) gt 0 and max($x:result) lt 1"/>
    </x:scenario>

    <x:scenario label="Scenario for testing function get-weights-scale">
        <x:variable name="djb:window-size" as="xs:integer" select="17"/>
        <x:call function="djb:get-weights-scale"/>
        <x:scenario label="with Gaussian kernel">
            <x:call>
                <x:param name="f:kernel" select="'gaussian'"/>
                <x:param name="f:window-size" select="$djb:window-size"/>
                <x:param name="f:stddev" select="5"/>
            </x:call>
            <x:expect label="desending Gaussian values (n = window-size + 1)"
                select="
                1, 
                0.9801986733067553, 
                0.9231163463866358, 
                0.835270211411272, 
                0.7261490370736909, 
                0.6065306597126334, 
                0.4867522559599717, 
                0.37531109885139957, 
                0.27803730045319414, 
                0.19789869908361465, 
                0.1353352832366127, 
                0.08892161745938634, 
                0.056134762834133725, 
                0.034047454734599344, 
                0.019841094744370288, 
                0.011108996538242306, 
                0.005976022895005943, 
                0.0030887154082367687
                "
            />
        </x:scenario>
        <x:scenario label="with rectangular kernel">
            <x:call>
                <x:param name="f:kernel" select="'rectangular'"/>
                <x:param name="f:window-size" select="$djb:window-size"/>
                <x:param name="f:stddev" select="5"/>
            </x:call>
            <x:expect label="rectangular values (n = window-size + 1)"
                select="
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
                "
            />
        </x:scenario>
        <x:scenario label="with exponential kernel">
            <x:call>
                <x:param name="f:kernel" select="'exponential'"/>
                <x:param name="f:window-size" select="$djb:window-size"/>
                <x:param name="f:stddev" select="5"/>
            </x:call>
            <x:expect label="exponential values"
                select="
                    1,
                    0.5,
                    0.25,
                    0.125,
                    0.0625,
                    0.03125,
                    0.015625,
                    0.0078125,
                    0.00390625,
                    0.001953125,
                    0.0009765625,
                    0.00048828125,
                    0.000244140625,
                    0.0001220703125,
                    0.00006103515625,
                    0.000030517578125,
                    0.0000152587890625,
                    0.00000762939453125
                    "
            />
        </x:scenario>
        <x:scenario label="with parabolic-up kernel">
            <x:call>
                <x:param name="f:kernel" select="'parabolic-up'"/>
                <x:param name="f:window-size" select="$djb:window-size"/>
                <x:param name="f:stddev" select="5"/>
            </x:call>
            <x:expect label="parabolic values, opening up"
                select="
                1,
                0.8858131487889274,
                0.7785467128027681,
                0.6782006920415224,
                0.5847750865051903,
                0.4982698961937717,
                0.41868512110726647,
                0.34602076124567477,
                0.28027681660899656,
                0.22145328719723184,
                0.1695501730103806,
                0.12456747404844293,
                0.08650519031141869,
                0.05536332179930796,
                0.031141868512110732,
                0.01384083044982699,
                0.0034602076124567475,
                0
                "
            />
        </x:scenario>
        <x:scenario label="with parabolic-down kernel">
            <x:call>
                <x:param name="f:kernel" select="'parabolic-down'"/>
                <x:param name="f:window-size" select="$djb:window-size"/>
                <x:param name="f:stddev" select="5"/>
            </x:call>
            <x:expect label="parabolic values, opening down"
                select="
                1,
                0.9965397923875432,
                0.986159169550173,
                0.9688581314878892,
                0.9446366782006921,
                0.9134948096885813,
                0.8754325259515571,
                0.8304498269896194,
                0.7785467128027681,
                0.7197231833910034,
                0.6539792387543253,
                0.5813148788927336,
                0.5017301038062283,
                0.4152249134948097,
                0.32179930795847755,
                0.2214532871972319,
                0.11418685121107264,
                0
                "
            />
        </x:scenario>
    </x:scenario>

    <!--
    <x:scenario label="Scenario for testing function get-weights-scale">
        <x:call function="djb:get-weights-scale">
            <x:param name="f:kernel" select="''"/>
            <x:param name="f:window-size" select="''"/>
        </x:call>
        <x:expect label="Not yet implemented" select="'Not yet implemented'"/>
    </x:scenario>

    <x:scenario label="Scenario for testing function weighted-average">
        <x:call function="djb:weighted-average">
            <x:param name="f:focus" select="''"/>
            <x:param name="f:window-size" select="''"/>
            <x:param name="f:input-values" select="''"/>
            <x:param name="f:weights" select="''"/>
        </x:call>
        <x:expect label="Not yet implemented" select="'Not yet implemented'"/>
    </x:scenario>

    <x:scenario label="Scenario for testing function gaussian">
        <x:call function="djb:gaussian">
            <x:param name="f:x" select="''"/>
            <x:param name="f:peak" select="''"/>
            <x:param name="f:mean" select="''"/>
            <x:param name="f:stddev" select="''"/>
        </x:call>
        <x:expect label="Not yet implemented" select="'Not yet implemented'"/>
    </x:scenario>

    <x:scenario label="Scenario for testing function round-to-odd">
        <x:call function="djb:round-to-odd">
            <x:param name="input" select="''"/>
        </x:call>
        <x:expect label="Not yet implemented" select="'Not yet implemented'"/>
    </x:scenario>

    <x:scenario label="Scenario for testing function recenter">
        <x:call function="djb:recenter">
            <x:param name="f:input-values" select="''"/>
            <x:param name="f:new-min" select="''"/>
            <x:param name="f:new-max" select="''"/>
        </x:call>
        <x:expect label="Not yet implemented" select="'Not yet implemented'"/>
    </x:scenario>

    <x:scenario label="Scenario for testing function expand-to-tenths">
        <x:call function="djb:expand-to-tenths">
            <x:param name="f:half" select="''"/>
        </x:call>
        <x:expect label="Not yet implemented" select="'Not yet implemented'"/>
    </x:scenario>

    <x:scenario label="Scenario for testing function uniform">
        <x:call function="djb:uniform">
            <x:param name="f:seq" select="''"/>
        </x:call>
        <x:expect label="Not yet implemented" select="'Not yet implemented'"/>
    </x:scenario>

    <x:scenario label="Scenario for testing function validate-point-regex">
        <x:call function="djb:validate-point-regex">
            <x:param name="f:input-point" select="''"/>
        </x:call>
        <x:expect label="Not yet implemented" select="'Not yet implemented'"/>
    </x:scenario>

    <x:scenario label="Scenario for testing function validate-monotonic-X">
        <x:call function="djb:validate-monotonic-X">
            <x:param name="f:point-pairs" select="''"/>
        </x:call>
        <x:expect label="Not yet implemented" select="'Not yet implemented'"/>
    </x:scenario>

    <x:scenario label="Scenario for testing function monotonic">
        <x:call function="djb:monotonic">
            <x:param name="f:seq" select="''"/>
        </x:call>
        <x:expect label="Not yet implemented" select="'Not yet implemented'"/>
    </x:scenario>

    <x:scenario label="Scenario for testing function gaussian-weights">
        <x:call function="djb:gaussian-weights">
            <x:param name="f:window-size" select="''"/>
            <x:param name="f:stddev" select="''"/>
        </x:call>
        <x:expect label="Not yet implemented" select="'Not yet implemented'"/>
    </x:scenario>
-->

</x:description>
