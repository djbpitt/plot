<?xml version="1.0" encoding="utf-8"?>
<package xmlns='http://ns.saxonica.com/xslt/export' xmlns:fn='http://www.w3.org/2005/xpath-functions' xmlns:java-type='http://saxon.sf.net/java-type' xmlns:vv='http://saxon.sf.net/generated-variable' xmlns:xs='http://www.w3.org/2001/XMLSchema' when='2020-04-29T11:13:31.918-04:00' id='0' name='http://www.obdurodon.org/bezier' version='30' declaredModes='1' packageVersion='1' saxonProduct='SAXON-EE' saxonVersion='10.0' buildDateTime='2020-04-29T11:13:31.918-04:00' target='EE' targetVersion='1' relocatable='false' implicit='false'>
 <co id='0' binds=''>
  <function name='Q{http://www.obdurodon.org}create_inAnchorLengths' line='243' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='3'>
   <arg name='Q{}totalAnchorLengths' as='+AO'/>
   <arg name='Q{}segLengths' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='246' card='+' diag='5|0|XTTE0780|djb:create_inAnchorLengths#2'>
    <forEach>
     <to>
      <int val='1'/>
      <fn name='count'>
       <varRef name='Q{}totalAnchorLengths' slot='0'/>
      </fn>
     </to>
     <let line='252' var='Q{http://saxon.sf.net/generated-variable}current2030096643' as='1' slot='2' eval='16'>
      <dot type='1ADI'/>
      <arith op='div' calc='d/d'>
       <arith op='*' calc='d*d'>
        <subscript>
         <varRef name='Q{}totalAnchorLengths' slot='0'/>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096643' slot='2'/>
        </subscript>
        <subscript>
         <varRef name='Q{}segLengths' slot='1'/>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096643' slot='2'/>
        </subscript>
       </arith>
       <arith op='+' calc='d+d'>
        <subscript>
         <varRef name='Q{}segLengths' slot='1'/>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096643' slot='2'/>
        </subscript>
        <subscript>
         <varRef name='Q{}segLengths' slot='1'/>
         <arith op='+' calc='i+i'>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096643' slot='2'/>
          <int val='1'/>
         </arith>
        </subscript>
       </arith>
      </arith>
     </let>
    </forEach>
   </check>
  </function>
 </co>
 <co id='1' binds=''>
  <function name='Q{http://www.obdurodon.org}validate_points' line='29' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='16' flags='pU' as='1AB' slots='3'>
   <arg name='Q{}pointPairs' as='+AS'/>
   <let role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='40' var='Q{http://saxon.sf.net/generated-variable}v0' as='1AB' slot='1' eval='13'>
    <vc op='ge' onEmpty='0' comp='CAVC'>
     <fn name='count'>
      <varRef name='Q{}pointPairs' slot='0'/>
     </fn>
     <int val='3'/>
    </vc>
    <every var='Q{}pointPair' slot='2'>
     <varRef name='Q{}pointPairs' slot='0'/>
     <and op='and'>
      <fn name='matches'>
       <varRef name='Q{}pointPair' slot='2'/>
       <str val='^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+),[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)$'/>
       <str val=''/>
      </fn>
      <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='1'/>
     </and>
    </every>
   </let>
  </function>
 </co>
 <co id='2' binds=''>
  <function name='Q{http://www.obdurodon.org}create_lengths' line='98' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='4'>
   <arg name='Q{}dirXs' as='+AO'/>
   <arg name='Q{}dirYs' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='101' card='+' diag='5|0|XTTE0780|djb:create_lengths#2'>
    <forEach>
     <to>
      <int val='1'/>
      <fn name='count'>
       <varRef name='Q{}dirXs' slot='0'/>
      </fn>
     </to>
     <ifCall line='105' name='Q{http://www.w3.org/2005/xpath-functions/math}sqrt' type='?AO'>
      <arith op='+' calc='d+d'>
       <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}pow' type='?AO'>
        <let line='102' var='Q{http://saxon.sf.net/generated-variable}current-994371692' as='1' slot='2' eval='16'>
         <dot type='1ADI'/>
         <check card='1' diag='3|0|XTTE0570|xDistance'>
          <subscript>
           <varRef name='Q{}dirXs' slot='0'/>
           <varRef name='Q{http://saxon.sf.net/generated-variable}current-994371692' slot='2'/>
          </subscript>
         </check>
        </let>
        <dbl val='2'/>
       </ifCall>
       <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}pow' type='?AO'>
        <let line='103' var='Q{http://saxon.sf.net/generated-variable}current-994371692' as='1' slot='3' eval='16'>
         <dot type='1ADI'/>
         <check card='1' diag='3|0|XTTE0570|yDistance'>
          <subscript>
           <varRef name='Q{}dirYs' slot='1'/>
           <varRef name='Q{http://saxon.sf.net/generated-variable}current-994371692' slot='3'/>
          </subscript>
         </check>
        </let>
        <dbl val='2'/>
       </ifCall>
      </arith>
     </ifCall>
    </forEach>
   </check>
  </function>
 </co>
 <co id='3' vis='PUBLIC' binds=''>
  <globalVariable name='Q{}css' as='1NE nQ{http://www.w3.org/2000/svg}style c~untyped' line='511' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' visibility='PUBLIC'>
   <elem baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='512' name='style' nsuri='http://www.w3.org/2000/svg' flags='d'>
    <sequence>
     <att name='type' flags='l'>
      <str val='text/css'/>
     </att>
     <valueOf flags='l'>
      <str val='&#xA;            .backgroundColor {&#xA;                fill: papayawhip;&#xA;            }&#xA;            .mainLine {&#xA;                fill: none;&#xA;                stroke: silver;&#xA;                stroke-width: 1;&#xA;            }&#xA;            .mainCircle {&#xA;                fill: silver;&#xA;            }&#xA;            .alternatingLine {&#xA;                fill: none;&#xA;                stroke: lightblue;&#xA;                stroke-width: 1;&#xA;                stroke-dasharray: 3 3;&#xA;            }&#xA;            .anchorLine {&#xA;                stroke: magenta;&#xA;                stroke-width: 1;&#xA;            }&#xA;            .anchorCircle1 {&#xA;                stroke: mediumseagreen;&#xA;                stroke-width: 1;&#xA;                fill: papayawhip;&#xA;            }&#xA;            .anchorCircle2 {&#xA;                stroke: red;&#xA;                stroke-width: 1;&#xA;                fill: papayawhip;&#xA;            }'/>
     </valueOf>
    </sequence>
   </elem>
  </globalVariable>
 </co>
 <co id='4' binds=''>
  <function name='Q{http://www.obdurodon.org}create_segLengths' line='219' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='3'>
   <arg name='Q{}xLengths' as='+AO'/>
   <arg name='Q{}yLengths' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='222' card='+' diag='5|0|XTTE0780|djb:create_segLengths#2'>
    <forEach>
     <to>
      <int val='1'/>
      <fn name='count'>
       <varRef name='Q{}xLengths' slot='0'/>
      </fn>
     </to>
     <let line='225' var='Q{http://saxon.sf.net/generated-variable}current-2082106876' as='1' slot='2' eval='16'>
      <dot type='1ADI'/>
      <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}sqrt' type='?AO'>
       <arith op='+' calc='d+d'>
        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}pow' type='?AO'>
         <subscript>
          <varRef name='Q{}xLengths' slot='0'/>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current-2082106876' slot='2'/>
         </subscript>
         <dbl val='2'/>
        </ifCall>
        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}pow' type='?AO'>
         <subscript>
          <varRef name='Q{}yLengths' slot='1'/>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current-2082106876' slot='2'/>
         </subscript>
         <dbl val='2'/>
        </ifCall>
       </arith>
      </ifCall>
     </let>
    </forEach>
   </check>
  </function>
 </co>
 <co id='5' binds=''>
  <function name='Q{http://www.obdurodon.org}split_points' line='46' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AS' slots='1'>
   <arg name='Q{}all_points' as='1AS'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='48' card='+' diag='5|0|XTTE0780|djb:split_points#1'>
    <fn name='tokenize'>
     <fn name='normalize-space'>
      <varRef name='Q{}all_points' slot='0'/>
     </fn>
     <str val=' '/>
     <str val=''/>
    </fn>
   </check>
  </function>
 </co>
 <co id='6' binds=''>
  <function name='Q{http://www.obdurodon.org}create_anchor1Ys' line='291' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='4'>
   <arg name='Q{}yPoints' as='+AO'/>
   <arg name='Q{}angle1s' as='+AO'/>
   <arg name='Q{}inAnchorLengths' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='295' card='+' diag='5|0|XTTE0780|djb:create_anchor1Ys#3'>
    <forEach>
     <to>
      <int val='1'/>
      <fn name='count'>
       <varRef name='Q{}angle1s' slot='1'/>
      </fn>
     </to>
     <let line='300' var='Q{http://saxon.sf.net/generated-variable}current1044477079' as='1' slot='3' eval='16'>
      <dot type='1ADI'/>
      <arith op='+' calc='d+d'>
       <subscript>
        <varRef name='Q{}yPoints' slot='0'/>
        <arith op='+' calc='i+i'>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current1044477079' slot='3'/>
         <int val='1'/>
        </arith>
       </subscript>
       <arith op='*' calc='d*d'>
        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}sin' type='?AO'>
         <subscript>
          <varRef name='Q{}angle1s' slot='1'/>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current1044477079' slot='3'/>
         </subscript>
        </ifCall>
        <subscript>
         <varRef name='Q{}inAnchorLengths' slot='2'/>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current1044477079' slot='3'/>
        </subscript>
       </arith>
      </arith>
     </let>
    </forEach>
   </check>
  </function>
 </co>
 <co id='7' binds=''>
  <function name='Q{http://www.obdurodon.org}create_anchor1Xs' line='275' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='4'>
   <arg name='Q{}xPoints' as='+AO'/>
   <arg name='Q{}angle1s' as='+AO'/>
   <arg name='Q{}inAnchorLengths' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='279' card='+' diag='5|0|XTTE0780|djb:create_anchor1Xs#3'>
    <forEach>
     <to>
      <int val='1'/>
      <fn name='count'>
       <varRef name='Q{}angle1s' slot='1'/>
      </fn>
     </to>
     <let line='284' var='Q{http://saxon.sf.net/generated-variable}current1044526231' as='1' slot='3' eval='16'>
      <dot type='1ADI'/>
      <arith op='+' calc='d+d'>
       <subscript>
        <varRef name='Q{}xPoints' slot='0'/>
        <arith op='+' calc='i+i'>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current1044526231' slot='3'/>
         <int val='1'/>
        </arith>
       </subscript>
       <arith op='*' calc='d*d'>
        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}cos' type='?AO'>
         <subscript>
          <varRef name='Q{}angle1s' slot='1'/>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current1044526231' slot='3'/>
         </subscript>
        </ifCall>
        <subscript>
         <varRef name='Q{}inAnchorLengths' slot='2'/>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current1044526231' slot='3'/>
        </subscript>
       </arith>
      </arith>
     </let>
    </forEach>
   </check>
  </function>
 </co>
 <co id='8' vis='FINAL' binds='3 9'>
  <function name='Q{http://www.obdurodon.org}bezier' line='550' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+NE' slots='95'>
   <arg name='Q{}inputPoints' as='1AS'/>
   <arg name='Q{}scaling' as='1AO'/>
   <arg name='Q{}debug' as='1AB'/>
   <let role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='560' var='Q{}pointPairs' as='+AS' slot='3' eval='4'>
    <check line='48' card='+' diag='5|0|XTTE0780|djb:split_points#1'>
     <fn name='tokenize'>
      <fn name='normalize-space'>
       <varRef line='560' name='Q{}inputPoints' slot='0'/>
      </fn>
      <str val=' '/>
      <str val=''/>
     </fn>
    </check>
    <sequence line='561'>
     <choose>
      <fn name='not'>
       <let line='40' var='Q{http://saxon.sf.net/generated-variable}v0' as='1AB' slot='4' eval='16'>
        <vc op='ge' onEmpty='0' comp='CAVC'>
         <fn name='count'>
          <varRef line='561' name='Q{}pointPairs' slot='3'/>
         </fn>
         <int val='3'/>
        </vc>
        <every var='Q{}pointPair' slot='5'>
         <varRef line='561' name='Q{}pointPairs' slot='3'/>
         <and op='and'>
          <fn name='matches'>
           <varRef name='Q{}pointPair' slot='5'/>
           <str val='^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+),[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)$'/>
           <str val=''/>
          </fn>
          <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='4'/>
         </and>
        </every>
       </let>
      </fn>
      <treat line='562' as='NE' diag='5|0|XTTE0780|djb:bezier#3'>
       <message>
        <fn role='select' name='concat'>
         <str val='Invalid points: '/>
         <varRef name='Q{}inputPoints' slot='0'/>
        </fn>
        <str role='terminate' val='yes'/>
        <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
       </message>
      </treat>
     </choose>
     <choose line='564'>
      <or op='or'>
       <fn name='not'>
        <vc op='ge' onEmpty='0' comp='CAVC'>
         <varRef name='Q{}scaling' slot='1'/>
         <int val='0'/>
        </vc>
       </fn>
       <fn name='not'>
        <vc op='le' onEmpty='0' comp='CAVC'>
         <varRef name='Q{}scaling' slot='1'/>
         <int val='1'/>
        </vc>
       </fn>
      </or>
      <treat line='565' as='NE' diag='5|0|XTTE0780|djb:bezier#3'>
       <message>
        <fn role='select' name='concat'>
         <str val='Invalid scaling value: '/>
         <varRef name='Q{}scaling' slot='1'/>
        </fn>
        <str role='terminate' val='yes'/>
        <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
       </message>
      </treat>
     </choose>
     <let line='571' var='Q{}xPoints' as='+AO' slot='6' eval='4'>
      <check line='56' card='+' diag='5|0|XTTE0780|djb:extract_xPoints#1'>
       <forEach>
        <forEach>
         <varRef line='571' name='Q{}pointPairs' slot='3'/>
         <fn name='substring-before'>
          <dot type='1AS'/>
          <str val=','/>
         </fn>
        </forEach>
        <cast flags='a' as='1AO'>
         <dot type='1AS'/>
        </cast>
       </forEach>
      </check>
      <let line='572' var='Q{}yPoints' as='+AO' slot='7' eval='4'>
       <check line='65' card='+' diag='5|0|XTTE0780|djb:extract_yPoints#1'>
        <forEach>
         <forEach>
          <varRef line='572' name='Q{}pointPairs' slot='3'/>
          <fn name='substring-after'>
           <dot type='1AS'/>
           <str val=','/>
          </fn>
         </forEach>
         <cast flags='a' as='1AO'>
          <dot type='1AS'/>
         </cast>
        </forEach>
       </check>
       <let line='573' var='Q{}dirXs' as='+AO' slot='8' eval='4'>
        <let var='Q{}xPoints' as='+AO' slot='9' eval='6'>
         <varRef name='Q{}xPoints' slot='6'/>
         <check line='74' card='+' diag='5|0|XTTE0780|djb:create_dirXs#1'>
          <forEach>
           <to>
            <int val='1'/>
            <arith op='-' calc='i-i'>
             <fn name='count'>
              <varRef name='Q{}xPoints' slot='9'/>
             </fn>
             <int val='2'/>
            </arith>
           </to>
           <arith line='77' op='-' calc='d-d'>
            <let line='76' var='Q{http://saxon.sf.net/generated-variable}current937206067' as='1' slot='10' eval='16'>
             <dot type='1ADI'/>
             <check card='1' diag='3|0|XTTE0570|x2'>
              <subscript>
               <varRef name='Q{}xPoints' slot='9'/>
               <arith op='+' calc='i+i'>
                <varRef name='Q{http://saxon.sf.net/generated-variable}current937206067' slot='10'/>
                <int val='2'/>
               </arith>
              </subscript>
             </check>
            </let>
            <let line='75' var='Q{http://saxon.sf.net/generated-variable}current1579810278' as='1' slot='11' eval='16'>
             <dot type='1ADI'/>
             <check card='1' diag='3|0|XTTE0570|x1'>
              <subscript>
               <varRef name='Q{}xPoints' slot='9'/>
               <varRef name='Q{http://saxon.sf.net/generated-variable}current1579810278' slot='11'/>
              </subscript>
             </check>
            </let>
           </arith>
          </forEach>
         </check>
        </let>
        <let line='574' var='Q{}dirYs' as='+AO' slot='12' eval='4'>
         <let var='Q{}yPoints' as='+AO' slot='13' eval='6'>
          <varRef name='Q{}yPoints' slot='7'/>
          <check line='87' card='+' diag='5|0|XTTE0780|djb:create_dirYs#1'>
           <forEach>
            <to>
             <int val='1'/>
             <arith op='-' calc='i-i'>
              <fn name='count'>
               <varRef name='Q{}yPoints' slot='13'/>
              </fn>
              <int val='2'/>
             </arith>
            </to>
            <arith line='90' op='-' calc='d-d'>
             <let line='89' var='Q{http://saxon.sf.net/generated-variable}current937206067' as='1' slot='14' eval='16'>
              <dot type='1ADI'/>
              <check card='1' diag='3|0|XTTE0570|y2'>
               <subscript>
                <varRef name='Q{}yPoints' slot='13'/>
                <arith op='+' calc='i+i'>
                 <varRef name='Q{http://saxon.sf.net/generated-variable}current937206067' slot='14'/>
                 <int val='2'/>
                </arith>
               </subscript>
              </check>
             </let>
             <let line='88' var='Q{http://saxon.sf.net/generated-variable}current1579810278' as='1' slot='15' eval='16'>
              <dot type='1ADI'/>
              <check card='1' diag='3|0|XTTE0570|y1'>
               <subscript>
                <varRef name='Q{}yPoints' slot='13'/>
                <varRef name='Q{http://saxon.sf.net/generated-variable}current1579810278' slot='15'/>
               </subscript>
              </check>
             </let>
            </arith>
           </forEach>
          </check>
         </let>
         <let line='575' var='Q{}lengths' as='+AO' slot='16' eval='4'>
          <let var='Q{}dirXs' as='+AO' slot='17' eval='6'>
           <varRef name='Q{}dirXs' slot='8'/>
           <let var='Q{}dirYs' as='+AO' slot='18' eval='6'>
            <varRef name='Q{}dirYs' slot='12'/>
            <check line='101' card='+' diag='5|0|XTTE0780|djb:create_lengths#2'>
             <forEach>
              <to>
               <int val='1'/>
               <fn name='count'>
                <varRef name='Q{}dirXs' slot='17'/>
               </fn>
              </to>
              <ifCall line='102' name='Q{http://www.w3.org/2005/xpath-functions/math}sqrt' type='?AO'>
               <arith op='+' calc='d+d'>
                <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}pow' type='?AO'>
                 <let var='Q{http://saxon.sf.net/generated-variable}current-994371692' as='1' slot='19' eval='16'>
                  <dot type='1ADI'/>
                  <check card='1' diag='3|0|XTTE0570|xDistance'>
                   <subscript>
                    <varRef name='Q{}dirXs' slot='17'/>
                    <varRef name='Q{http://saxon.sf.net/generated-variable}current-994371692' slot='19'/>
                   </subscript>
                  </check>
                 </let>
                 <dbl val='2'/>
                </ifCall>
                <ifCall line='103' name='Q{http://www.w3.org/2005/xpath-functions/math}pow' type='?AO'>
                 <let var='Q{http://saxon.sf.net/generated-variable}current-994371692' as='1' slot='20' eval='16'>
                  <dot type='1ADI'/>
                  <check card='1' diag='3|0|XTTE0570|yDistance'>
                   <subscript>
                    <varRef name='Q{}dirYs' slot='18'/>
                    <varRef name='Q{http://saxon.sf.net/generated-variable}current-994371692' slot='20'/>
                   </subscript>
                  </check>
                 </let>
                 <dbl val='2'/>
                </ifCall>
               </arith>
              </ifCall>
             </forEach>
            </check>
           </let>
          </let>
          <let line='576' var='Q{}unitXs' as='+AO' slot='21' eval='4'>
           <let var='Q{}dirXs' as='+AO' slot='22' eval='6'>
            <varRef name='Q{}dirXs' slot='8'/>
            <let var='Q{}lengths' as='+AO' slot='23' eval='6'>
             <varRef name='Q{}lengths' slot='16'/>
             <check line='116' card='+' diag='5|0|XTTE0780|djb:create_unitXs#2'>
              <forEach>
               <to>
                <int val='1'/>
                <fn name='count'>
                 <varRef name='Q{}dirXs' slot='22'/>
                </fn>
               </to>
               <let line='117' var='Q{http://saxon.sf.net/generated-variable}current66517518' as='1' slot='24' eval='16'>
                <dot type='1ADI'/>
                <arith op='div' calc='d/d'>
                 <subscript>
                  <varRef name='Q{}dirXs' slot='22'/>
                  <varRef name='Q{http://saxon.sf.net/generated-variable}current66517518' slot='24'/>
                 </subscript>
                 <subscript>
                  <varRef name='Q{}lengths' slot='23'/>
                  <varRef name='Q{http://saxon.sf.net/generated-variable}current66517518' slot='24'/>
                 </subscript>
                </arith>
               </let>
              </forEach>
             </check>
            </let>
           </let>
           <let line='577' var='Q{}unitYs' as='+AO' slot='25' eval='4'>
            <let var='Q{}dirYs' as='+AO' slot='26' eval='6'>
             <varRef name='Q{}dirYs' slot='12'/>
             <let var='Q{}lengths' as='+AO' slot='27' eval='6'>
              <varRef name='Q{}lengths' slot='16'/>
              <check line='128' card='+' diag='5|0|XTTE0780|djb:create_unitYs#2'>
               <forEach>
                <to>
                 <int val='1'/>
                 <fn name='count'>
                  <varRef name='Q{}dirYs' slot='26'/>
                 </fn>
                </to>
                <let line='129' var='Q{http://saxon.sf.net/generated-variable}current66517518' as='1' slot='28' eval='16'>
                 <dot type='1ADI'/>
                 <arith op='div' calc='d/d'>
                  <subscript>
                   <varRef name='Q{}dirYs' slot='26'/>
                   <varRef name='Q{http://saxon.sf.net/generated-variable}current66517518' slot='28'/>
                  </subscript>
                  <subscript>
                   <varRef name='Q{}lengths' slot='27'/>
                   <varRef name='Q{http://saxon.sf.net/generated-variable}current66517518' slot='28'/>
                  </subscript>
                 </arith>
                </let>
               </forEach>
              </check>
             </let>
            </let>
            <let line='578' var='Q{}normal1Xs' as='+AO' slot='29' eval='4'>
             <check line='139' card='+' diag='5|0|XTTE0780|djb:create_normal1Xs#1'>
              <forEach>
               <varRef line='578' name='Q{}unitYs' slot='25'/>
               <arith op='*' calc='d*d'>
                <dbl val='-1'/>
                <dot type='1AO'/>
               </arith>
              </forEach>
             </check>
             <let line='579' var='Q{}normal1Ys' as='+AO' slot='30' eval='6'>
              <varRef name='Q{}unitXs' slot='21'/>
              <let line='580' var='Q{}normal2Xs' as='+AO' slot='31' eval='6'>
               <varRef name='Q{}unitYs' slot='25'/>
               <let line='581' var='Q{}normal2Ys' as='+AO' slot='32' eval='4'>
                <check line='163' card='+' diag='5|0|XTTE0780|djb:create_normal2Ys#1'>
                 <forEach>
                  <varRef line='581' name='Q{}unitXs' slot='21'/>
                  <arith op='*' calc='d*d'>
                   <dbl val='-1'/>
                   <dot type='1AO'/>
                  </arith>
                 </forEach>
                </check>
                <let line='583' var='Q{}angle1s' as='+AO' slot='33' eval='4'>
                 <let var='Q{}normal1Ys' as='+AO' slot='34' eval='6'>
                  <varRef name='Q{}normal1Ys' slot='30'/>
                  <let var='Q{}normal1Xs' as='+AO' slot='35' eval='6'>
                   <varRef name='Q{}normal1Xs' slot='29'/>
                   <check line='172' card='+' diag='5|0|XTTE0780|djb:create_angle1s#2'>
                    <forEach>
                     <to>
                      <int val='1'/>
                      <fn name='count'>
                       <varRef name='Q{}normal1Ys' slot='34'/>
                      </fn>
                     </to>
                     <let line='175' var='Q{http://saxon.sf.net/generated-variable}current-398082312' as='1' slot='36' eval='16'>
                      <dot type='1ADI'/>
                      <arith op='+' calc='d+d'>
                       <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}atan2' type='1AO'>
                        <check card='1' diag='0|0||math:atan2'>
                         <subscript>
                          <varRef name='Q{}normal1Ys' slot='34'/>
                          <varRef name='Q{http://saxon.sf.net/generated-variable}current-398082312' slot='36'/>
                         </subscript>
                        </check>
                        <check card='1' diag='0|1||math:atan2'>
                         <subscript>
                          <varRef name='Q{}normal1Xs' slot='35'/>
                          <varRef name='Q{http://saxon.sf.net/generated-variable}current-398082312' slot='36'/>
                         </subscript>
                        </check>
                       </ifCall>
                       <dbl val='1.5707963267948966'/>
                      </arith>
                     </let>
                    </forEach>
                   </check>
                  </let>
                 </let>
                 <let line='585' var='Q{}angle2s' as='+AO' slot='37' eval='4'>
                  <let var='Q{}normal2Ys' as='+AO' slot='38' eval='6'>
                   <varRef name='Q{}normal2Ys' slot='32'/>
                   <let var='Q{}normal2Xs' as='+AO' slot='39' eval='6'>
                    <varRef name='Q{}normal2Xs' slot='31'/>
                    <check line='185' card='+' diag='5|0|XTTE0780|djb:create_angle2s#2'>
                     <forEach>
                      <to>
                       <int val='1'/>
                       <fn name='count'>
                        <varRef name='Q{}normal2Ys' slot='38'/>
                       </fn>
                      </to>
                      <let line='188' var='Q{http://saxon.sf.net/generated-variable}current-398082312' as='1' slot='40' eval='16'>
                       <dot type='1ADI'/>
                       <arith op='+' calc='d+d'>
                        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}atan2' type='1AO'>
                         <check card='1' diag='0|0||math:atan2'>
                          <subscript>
                           <varRef name='Q{}normal2Ys' slot='38'/>
                           <varRef name='Q{http://saxon.sf.net/generated-variable}current-398082312' slot='40'/>
                          </subscript>
                         </check>
                         <check card='1' diag='0|1||math:atan2'>
                          <subscript>
                           <varRef name='Q{}normal2Xs' slot='39'/>
                           <varRef name='Q{http://saxon.sf.net/generated-variable}current-398082312' slot='40'/>
                          </subscript>
                         </check>
                        </ifCall>
                        <dbl val='1.5707963267948966'/>
                       </arith>
                      </let>
                     </forEach>
                    </check>
                   </let>
                  </let>
                  <let line='589' var='Q{}segLengths' as='+AO' slot='41' eval='4'>
                   <let line='586' var='Q{}xLengths' as='+AO' slot='42' eval='4'>
                    <let var='Q{}xPoints' as='+AO' slot='43' eval='6'>
                     <varRef name='Q{}xPoints' slot='6'/>
                     <check line='201' card='+' diag='5|0|XTTE0780|djb:create_xLengths#1'>
                      <forEach>
                       <to>
                        <int val='1'/>
                        <arith op='-' calc='i-i'>
                         <fn name='count'>
                          <varRef name='Q{}xPoints' slot='43'/>
                         </fn>
                         <int val='1'/>
                        </arith>
                       </to>
                       <let line='202' var='Q{http://saxon.sf.net/generated-variable}current2030096647' as='1' slot='44' eval='16'>
                        <dot type='1ADI'/>
                        <arith op='-' calc='d-d'>
                         <subscript>
                          <varRef name='Q{}xPoints' slot='43'/>
                          <arith op='+' calc='i+i'>
                           <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096647' slot='44'/>
                           <int val='1'/>
                          </arith>
                         </subscript>
                         <subscript>
                          <varRef name='Q{}xPoints' slot='43'/>
                          <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096647' slot='44'/>
                         </subscript>
                        </arith>
                       </let>
                      </forEach>
                     </check>
                    </let>
                    <let line='587' var='Q{}yLengths' as='+AO' slot='45' eval='4'>
                     <let var='Q{}yPoints' as='+AO' slot='46' eval='6'>
                      <varRef name='Q{}yPoints' slot='7'/>
                      <check line='211' card='+' diag='5|0|XTTE0780|djb:create_yLengths#1'>
                       <forEach>
                        <to>
                         <int val='1'/>
                         <arith op='-' calc='i-i'>
                          <fn name='count'>
                           <varRef name='Q{}yPoints' slot='46'/>
                          </fn>
                          <int val='1'/>
                         </arith>
                        </to>
                        <let line='212' var='Q{http://saxon.sf.net/generated-variable}current2030096647' as='1' slot='47' eval='16'>
                         <dot type='1ADI'/>
                         <arith op='-' calc='d-d'>
                          <subscript>
                           <varRef name='Q{}yPoints' slot='46'/>
                           <arith op='+' calc='i+i'>
                            <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096647' slot='47'/>
                            <int val='1'/>
                           </arith>
                          </subscript>
                          <subscript>
                           <varRef name='Q{}yPoints' slot='46'/>
                           <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096647' slot='47'/>
                          </subscript>
                         </arith>
                        </let>
                       </forEach>
                      </check>
                     </let>
                     <check line='222' card='+' diag='5|0|XTTE0780|djb:create_segLengths#2'>
                      <forEach>
                       <to>
                        <int val='1'/>
                        <fn name='count'>
                         <varRef name='Q{}xLengths' slot='42'/>
                        </fn>
                       </to>
                       <let line='225' var='Q{http://saxon.sf.net/generated-variable}current-2082106876' as='1' slot='48' eval='16'>
                        <dot type='1ADI'/>
                        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}sqrt' type='?AO'>
                         <arith op='+' calc='d+d'>
                          <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}pow' type='?AO'>
                           <subscript>
                            <varRef name='Q{}xLengths' slot='42'/>
                            <varRef name='Q{http://saxon.sf.net/generated-variable}current-2082106876' slot='48'/>
                           </subscript>
                           <dbl val='2'/>
                          </ifCall>
                          <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}pow' type='?AO'>
                           <subscript>
                            <varRef name='Q{}yLengths' slot='45'/>
                            <varRef name='Q{http://saxon.sf.net/generated-variable}current-2082106876' slot='48'/>
                           </subscript>
                           <dbl val='2'/>
                          </ifCall>
                         </arith>
                        </ifCall>
                       </let>
                      </forEach>
                     </check>
                    </let>
                   </let>
                   <let line='591' var='Q{}totalAnchorLengths' as='+AO' slot='49' eval='4'>
                    <let var='Q{}lengths' as='+AO' slot='50' eval='6'>
                     <varRef name='Q{}lengths' slot='16'/>
                     <let var='Q{}scaling' as='1AO' slot='51' eval='6'>
                      <varRef name='Q{}scaling' slot='1'/>
                      <check line='235' card='+' diag='5|0|XTTE0780|djb:create_totalAnchorLengths#2'>
                       <forEach>
                        <to>
                         <int val='1'/>
                         <fn name='count'>
                          <varRef name='Q{}lengths' slot='50'/>
                         </fn>
                        </to>
                        <let line='236' var='Q{http://saxon.sf.net/generated-variable}current-1020357393' as='1' slot='52' eval='16'>
                         <dot type='1ADI'/>
                         <arith op='*' calc='d*d'>
                          <varRef name='Q{}scaling' slot='51'/>
                          <subscript>
                           <varRef name='Q{}lengths' slot='50'/>
                           <varRef name='Q{http://saxon.sf.net/generated-variable}current-1020357393' slot='52'/>
                          </subscript>
                         </arith>
                        </let>
                       </forEach>
                      </check>
                     </let>
                    </let>
                    <let line='593' var='Q{}inAnchorLengths' as='+AO' slot='53' eval='4'>
                     <let var='Q{}totalAnchorLengths' as='+AO' slot='54' eval='6'>
                      <varRef name='Q{}totalAnchorLengths' slot='49'/>
                      <let var='Q{}segLengths' as='+AO' slot='55' eval='6'>
                       <varRef name='Q{}segLengths' slot='41'/>
                       <check line='246' card='+' diag='5|0|XTTE0780|djb:create_inAnchorLengths#2'>
                        <forEach>
                         <to>
                          <int val='1'/>
                          <fn name='count'>
                           <varRef name='Q{}totalAnchorLengths' slot='54'/>
                          </fn>
                         </to>
                         <let line='252' var='Q{http://saxon.sf.net/generated-variable}current2030096643' as='1' slot='56' eval='16'>
                          <dot type='1ADI'/>
                          <arith op='div' calc='d/d'>
                           <arith op='*' calc='d*d'>
                            <subscript>
                             <varRef name='Q{}totalAnchorLengths' slot='54'/>
                             <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096643' slot='56'/>
                            </subscript>
                            <subscript>
                             <varRef name='Q{}segLengths' slot='55'/>
                             <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096643' slot='56'/>
                            </subscript>
                           </arith>
                           <arith op='+' calc='d+d'>
                            <subscript>
                             <varRef name='Q{}segLengths' slot='55'/>
                             <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096643' slot='56'/>
                            </subscript>
                            <subscript>
                             <varRef name='Q{}segLengths' slot='55'/>
                             <arith op='+' calc='i+i'>
                              <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096643' slot='56'/>
                              <int val='1'/>
                             </arith>
                            </subscript>
                           </arith>
                          </arith>
                         </let>
                        </forEach>
                       </check>
                      </let>
                     </let>
                     <let line='595' var='Q{}outAnchorLengths' as='+AO' slot='57' eval='4'>
                      <let var='Q{}totalAnchorLengths' as='+AO' slot='58' eval='6'>
                       <varRef name='Q{}totalAnchorLengths' slot='49'/>
                       <let var='Q{}segLengths' as='+AO' slot='59' eval='6'>
                        <varRef name='Q{}segLengths' slot='41'/>
                        <check line='262' card='+' diag='5|0|XTTE0780|djb:create_outAnchorLengths#2'>
                         <forEach>
                          <to>
                           <int val='1'/>
                           <fn name='count'>
                            <varRef name='Q{}totalAnchorLengths' slot='58'/>
                           </fn>
                          </to>
                          <let line='268' var='Q{http://saxon.sf.net/generated-variable}current66517512' as='1' slot='60' eval='16'>
                           <dot type='1ADI'/>
                           <arith op='div' calc='d/d'>
                            <arith op='*' calc='d*d'>
                             <subscript>
                              <varRef name='Q{}totalAnchorLengths' slot='58'/>
                              <varRef name='Q{http://saxon.sf.net/generated-variable}current66517512' slot='60'/>
                             </subscript>
                             <subscript>
                              <varRef name='Q{}segLengths' slot='59'/>
                              <arith op='+' calc='i+i'>
                               <varRef name='Q{http://saxon.sf.net/generated-variable}current66517512' slot='60'/>
                               <int val='1'/>
                              </arith>
                             </subscript>
                            </arith>
                            <arith op='+' calc='d+d'>
                             <subscript>
                              <varRef name='Q{}segLengths' slot='59'/>
                              <varRef name='Q{http://saxon.sf.net/generated-variable}current66517512' slot='60'/>
                             </subscript>
                             <subscript>
                              <varRef name='Q{}segLengths' slot='59'/>
                              <arith op='+' calc='i+i'>
                               <varRef name='Q{http://saxon.sf.net/generated-variable}current66517512' slot='60'/>
                               <int val='1'/>
                              </arith>
                             </subscript>
                            </arith>
                           </arith>
                          </let>
                         </forEach>
                        </check>
                       </let>
                      </let>
                      <let line='597' var='Q{}anchor1Xs' as='+AO' slot='61' eval='4'>
                       <let var='Q{}xPoints' as='+AO' slot='62' eval='6'>
                        <varRef name='Q{}xPoints' slot='6'/>
                        <let var='Q{}angle1s' as='+AO' slot='63' eval='6'>
                         <varRef name='Q{}angle1s' slot='33'/>
                         <let var='Q{}inAnchorLengths' as='+AO' slot='64' eval='6'>
                          <varRef name='Q{}inAnchorLengths' slot='53'/>
                          <check line='279' card='+' diag='5|0|XTTE0780|djb:create_anchor1Xs#3'>
                           <forEach>
                            <to>
                             <int val='1'/>
                             <fn name='count'>
                              <varRef name='Q{}angle1s' slot='63'/>
                             </fn>
                            </to>
                            <let line='284' var='Q{http://saxon.sf.net/generated-variable}current1044526231' as='1' slot='65' eval='16'>
                             <dot type='1ADI'/>
                             <arith op='+' calc='d+d'>
                              <subscript>
                               <varRef name='Q{}xPoints' slot='62'/>
                               <arith op='+' calc='i+i'>
                                <varRef name='Q{http://saxon.sf.net/generated-variable}current1044526231' slot='65'/>
                                <int val='1'/>
                               </arith>
                              </subscript>
                              <arith op='*' calc='d*d'>
                               <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}cos' type='?AO'>
                                <subscript>
                                 <varRef name='Q{}angle1s' slot='63'/>
                                 <varRef name='Q{http://saxon.sf.net/generated-variable}current1044526231' slot='65'/>
                                </subscript>
                               </ifCall>
                               <subscript>
                                <varRef name='Q{}inAnchorLengths' slot='64'/>
                                <varRef name='Q{http://saxon.sf.net/generated-variable}current1044526231' slot='65'/>
                               </subscript>
                              </arith>
                             </arith>
                            </let>
                           </forEach>
                          </check>
                         </let>
                        </let>
                       </let>
                       <let line='599' var='Q{}anchor1Ys' as='+AO' slot='66' eval='4'>
                        <let var='Q{}yPoints' as='+AO' slot='67' eval='6'>
                         <varRef name='Q{}yPoints' slot='7'/>
                         <let var='Q{}angle1s' as='+AO' slot='68' eval='6'>
                          <varRef name='Q{}angle1s' slot='33'/>
                          <let var='Q{}inAnchorLengths' as='+AO' slot='69' eval='6'>
                           <varRef name='Q{}inAnchorLengths' slot='53'/>
                           <check line='295' card='+' diag='5|0|XTTE0780|djb:create_anchor1Ys#3'>
                            <forEach>
                             <to>
                              <int val='1'/>
                              <fn name='count'>
                               <varRef name='Q{}angle1s' slot='68'/>
                              </fn>
                             </to>
                             <let line='300' var='Q{http://saxon.sf.net/generated-variable}current1044477079' as='1' slot='70' eval='16'>
                              <dot type='1ADI'/>
                              <arith op='+' calc='d+d'>
                               <subscript>
                                <varRef name='Q{}yPoints' slot='67'/>
                                <arith op='+' calc='i+i'>
                                 <varRef name='Q{http://saxon.sf.net/generated-variable}current1044477079' slot='70'/>
                                 <int val='1'/>
                                </arith>
                               </subscript>
                               <arith op='*' calc='d*d'>
                                <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}sin' type='?AO'>
                                 <subscript>
                                  <varRef name='Q{}angle1s' slot='68'/>
                                  <varRef name='Q{http://saxon.sf.net/generated-variable}current1044477079' slot='70'/>
                                 </subscript>
                                </ifCall>
                                <subscript>
                                 <varRef name='Q{}inAnchorLengths' slot='69'/>
                                 <varRef name='Q{http://saxon.sf.net/generated-variable}current1044477079' slot='70'/>
                                </subscript>
                               </arith>
                              </arith>
                             </let>
                            </forEach>
                           </check>
                          </let>
                         </let>
                        </let>
                        <let line='601' var='Q{}anchor2Xs' as='+AO' slot='71' eval='4'>
                         <let var='Q{}xPoints' as='+AO' slot='72' eval='6'>
                          <varRef name='Q{}xPoints' slot='6'/>
                          <let var='Q{}angle2s' as='+AO' slot='73' eval='6'>
                           <varRef name='Q{}angle2s' slot='37'/>
                           <let var='Q{}outAnchorLengths' as='+AO' slot='74' eval='6'>
                            <varRef name='Q{}outAnchorLengths' slot='57'/>
                            <check line='311' card='+' diag='5|0|XTTE0780|djb:create_anchor2Xs#3'>
                             <forEach>
                              <to>
                               <int val='1'/>
                               <fn name='count'>
                                <varRef name='Q{}angle2s' slot='73'/>
                               </fn>
                              </to>
                              <let line='316' var='Q{http://saxon.sf.net/generated-variable}current1044526231' as='1' slot='75' eval='16'>
                               <dot type='1ADI'/>
                               <arith op='+' calc='d+d'>
                                <subscript>
                                 <varRef name='Q{}xPoints' slot='72'/>
                                 <arith op='+' calc='i+i'>
                                  <varRef name='Q{http://saxon.sf.net/generated-variable}current1044526231' slot='75'/>
                                  <int val='1'/>
                                 </arith>
                                </subscript>
                                <arith op='*' calc='d*d'>
                                 <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}cos' type='?AO'>
                                  <subscript>
                                   <varRef name='Q{}angle2s' slot='73'/>
                                   <varRef name='Q{http://saxon.sf.net/generated-variable}current1044526231' slot='75'/>
                                  </subscript>
                                 </ifCall>
                                 <subscript>
                                  <varRef name='Q{}outAnchorLengths' slot='74'/>
                                  <varRef name='Q{http://saxon.sf.net/generated-variable}current1044526231' slot='75'/>
                                 </subscript>
                                </arith>
                               </arith>
                              </let>
                             </forEach>
                            </check>
                           </let>
                          </let>
                         </let>
                         <let line='603' var='Q{}anchor2Ys' as='+AO' slot='76' eval='4'>
                          <let var='Q{}yPoints' as='+AO' slot='77' eval='6'>
                           <varRef name='Q{}yPoints' slot='7'/>
                           <let var='Q{}angle2s' as='+AO' slot='78' eval='6'>
                            <varRef name='Q{}angle2s' slot='37'/>
                            <let var='Q{}outAnchorLengths' as='+AO' slot='79' eval='6'>
                             <varRef name='Q{}outAnchorLengths' slot='57'/>
                             <check line='327' card='+' diag='5|0|XTTE0780|djb:create_anchor2Ys#3'>
                              <forEach>
                               <to>
                                <int val='1'/>
                                <fn name='count'>
                                 <varRef name='Q{}angle2s' slot='78'/>
                                </fn>
                               </to>
                               <let line='332' var='Q{http://saxon.sf.net/generated-variable}current1044477079' as='1' slot='80' eval='16'>
                                <dot type='1ADI'/>
                                <arith op='+' calc='d+d'>
                                 <subscript>
                                  <varRef name='Q{}yPoints' slot='77'/>
                                  <arith op='+' calc='i+i'>
                                   <varRef name='Q{http://saxon.sf.net/generated-variable}current1044477079' slot='80'/>
                                   <int val='1'/>
                                  </arith>
                                 </subscript>
                                 <arith op='*' calc='d*d'>
                                  <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}sin' type='?AO'>
                                   <subscript>
                                    <varRef name='Q{}angle2s' slot='78'/>
                                    <varRef name='Q{http://saxon.sf.net/generated-variable}current1044477079' slot='80'/>
                                   </subscript>
                                  </ifCall>
                                  <subscript>
                                   <varRef name='Q{}outAnchorLengths' slot='79'/>
                                   <varRef name='Q{http://saxon.sf.net/generated-variable}current1044477079' slot='80'/>
                                  </subscript>
                                 </arith>
                                </arith>
                               </let>
                              </forEach>
                             </check>
                            </let>
                           </let>
                          </let>
                          <sequence line='607'>
                           <elem name='g' nsuri='http://www.w3.org/2000/svg' flags='d'>
                            <sequence line='611'>
                             <gVarRef name='Q{}css' bSlot='0'/>
                             <elem line='616' name='rect' nsuri='http://www.w3.org/2000/svg' flags='dl'>
                              <sequence>
                               <att name='x' flags='l'>
                                <str val='0'/>
                               </att>
                               <att name='y' flags='l'>
                                <str val='0'/>
                               </att>
                               <att name='width' flags='l'>
                                <str val='500'/>
                               </att>
                               <att name='height' flags='l'>
                                <str val='300'/>
                               </att>
                               <att name='stroke' flags='l'>
                                <str val='black'/>
                               </att>
                               <att name='stroke-width' flags='l'>
                                <str val='1'/>
                               </att>
                               <att name='class' flags='l'>
                                <str val='backgroundColor'/>
                               </att>
                              </sequence>
                             </elem>
                             <forEach line='620'>
                              <to>
                               <int val='1'/>
                               <fn name='count'>
                                <varRef name='Q{}xPoints' slot='6'/>
                               </fn>
                              </to>
                              <elem line='622' name='circle' nsuri='http://www.w3.org/2000/svg' flags='dl'>
                               <sequence>
                                <att name='class' flags='l'>
                                 <str val='mainCircle'/>
                                </att>
                                <att name='cx' flags='l'>
                                 <let var='Q{http://saxon.sf.net/generated-variable}current-963925646' as='1' slot='81' eval='16'>
                                  <dot type='1ADI'/>
                                  <fn name='string'>
                                   <convert from='AO' to='AS'>
                                    <subscript>
                                     <varRef name='Q{}xPoints' slot='6'/>
                                     <varRef name='Q{http://saxon.sf.net/generated-variable}current-963925646' slot='81'/>
                                    </subscript>
                                   </convert>
                                  </fn>
                                 </let>
                                </att>
                                <att name='cy' flags='l'>
                                 <let var='Q{http://saxon.sf.net/generated-variable}current-963925646' as='1' slot='82' eval='16'>
                                  <dot type='1ADI'/>
                                  <fn name='string'>
                                   <convert from='AO' to='AS'>
                                    <subscript>
                                     <varRef name='Q{}yPoints' slot='7'/>
                                     <varRef name='Q{http://saxon.sf.net/generated-variable}current-963925646' slot='82'/>
                                    </subscript>
                                   </convert>
                                  </fn>
                                 </let>
                                </att>
                                <att name='r' flags='l'>
                                 <str val='2'/>
                                </att>
                               </sequence>
                              </elem>
                             </forEach>
                             <choose line='624'>
                              <varRef name='Q{}debug' slot='2'/>
                              <elem line='625' name='polyline' nsuri='http://www.w3.org/2000/svg' flags='dl'>
                               <sequence>
                                <att name='class' flags='l'>
                                 <str val='mainLine'/>
                                </att>
                                <att name='points' flags='l'>
                                 <varRef name='Q{}inputPoints' slot='0'/>
                                </att>
                               </sequence>
                              </elem>
                             </choose>
                             <choose line='630'>
                              <varRef name='Q{}debug' slot='2'/>
                              <forEach line='631'>
                               <literal count='2'>
                                <int val='0'/>
                                <int val='1'/>
                               </literal>
                               <elem line='633' name='polyline' nsuri='http://www.w3.org/2000/svg' flags='dl'>
                                <sequence>
                                 <att name='class' flags='l'>
                                  <str val='alternatingLine'/>
                                 </att>
                                 <att name='points' flags='l'>
                                  <let var='Q{http://saxon.sf.net/generated-variable}current-683853675' as='1' slot='83' eval='16'>
                                   <dot type='1ADI'/>
                                   <fn name='string-join'>
                                    <filter flags='pb'>
                                     <varRef name='Q{}pointPairs' slot='3'/>
                                     <vc op='eq' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
                                      <arith op='mod' calc='i%i'>
                                       <fn name='position'/>
                                       <int val='2'/>
                                      </arith>
                                      <varRef name='Q{http://saxon.sf.net/generated-variable}current-683853675' slot='83'/>
                                     </vc>
                                    </filter>
                                    <str val=' '/>
                                   </fn>
                                  </let>
                                 </att>
                                </sequence>
                               </elem>
                              </forEach>
                             </choose>
                             <choose line='639'>
                              <varRef name='Q{}debug' slot='2'/>
                              <forEach line='640'>
                               <to>
                                <int val='1'/>
                                <arith op='-' calc='i-i'>
                                 <fn name='count'>
                                  <varRef name='Q{}xPoints' slot='6'/>
                                 </fn>
                                 <int val='2'/>
                                </arith>
                               </to>
                               <sequence line='643'>
                                <elem name='line' nsuri='http://www.w3.org/2000/svg' flags='dl'>
                                 <sequence>
                                  <att name='class' flags='l'>
                                   <str val='anchorLine'/>
                                  </att>
                                  <att name='x1' flags='l'>
                                   <let var='Q{http://saxon.sf.net/generated-variable}current-963925646' as='1' slot='84' eval='16'>
                                    <dot type='1ADI'/>
                                    <fn name='string'>
                                     <convert from='AO' to='AS'>
                                      <subscript>
                                       <varRef name='Q{}anchor1Xs' slot='61'/>
                                       <varRef name='Q{http://saxon.sf.net/generated-variable}current-963925646' slot='84'/>
                                      </subscript>
                                     </convert>
                                    </fn>
                                   </let>
                                  </att>
                                  <att name='y1' flags='l'>
                                   <let var='Q{http://saxon.sf.net/generated-variable}current-963925646' as='1' slot='85' eval='16'>
                                    <dot type='1ADI'/>
                                    <fn name='string'>
                                     <convert from='AO' to='AS'>
                                      <subscript>
                                       <varRef name='Q{}anchor1Ys' slot='66'/>
                                       <varRef name='Q{http://saxon.sf.net/generated-variable}current-963925646' slot='85'/>
                                      </subscript>
                                     </convert>
                                    </fn>
                                   </let>
                                  </att>
                                  <att name='x2' flags='l'>
                                   <let var='Q{http://saxon.sf.net/generated-variable}current-963925646' as='1' slot='86' eval='16'>
                                    <dot type='1ADI'/>
                                    <fn name='string'>
                                     <convert from='AO' to='AS'>
                                      <subscript>
                                       <varRef name='Q{}anchor2Xs' slot='71'/>
                                       <varRef name='Q{http://saxon.sf.net/generated-variable}current-963925646' slot='86'/>
                                      </subscript>
                                     </convert>
                                    </fn>
                                   </let>
                                  </att>
                                  <att name='y2' flags='l'>
                                   <let var='Q{http://saxon.sf.net/generated-variable}current-963925646' as='1' slot='87' eval='16'>
                                    <dot type='1ADI'/>
                                    <fn name='string'>
                                     <convert from='AO' to='AS'>
                                      <subscript>
                                       <varRef name='Q{}anchor2Ys' slot='76'/>
                                       <varRef name='Q{http://saxon.sf.net/generated-variable}current-963925646' slot='87'/>
                                      </subscript>
                                     </convert>
                                    </fn>
                                   </let>
                                  </att>
                                 </sequence>
                                </elem>
                                <elem line='645' name='circle' nsuri='http://www.w3.org/2000/svg' flags='dl'>
                                 <sequence>
                                  <att name='class' flags='l'>
                                   <str val='anchorCircle1'/>
                                  </att>
                                  <att name='cx' flags='l'>
                                   <let var='Q{http://saxon.sf.net/generated-variable}current-963925646' as='1' slot='88' eval='16'>
                                    <dot type='1ADI'/>
                                    <fn name='string'>
                                     <convert from='AO' to='AS'>
                                      <subscript>
                                       <varRef name='Q{}anchor1Xs' slot='61'/>
                                       <varRef name='Q{http://saxon.sf.net/generated-variable}current-963925646' slot='88'/>
                                      </subscript>
                                     </convert>
                                    </fn>
                                   </let>
                                  </att>
                                  <att name='cy' flags='l'>
                                   <let var='Q{http://saxon.sf.net/generated-variable}current-963925646' as='1' slot='89' eval='16'>
                                    <dot type='1ADI'/>
                                    <fn name='string'>
                                     <convert from='AO' to='AS'>
                                      <subscript>
                                       <varRef name='Q{}anchor1Ys' slot='66'/>
                                       <varRef name='Q{http://saxon.sf.net/generated-variable}current-963925646' slot='89'/>
                                      </subscript>
                                     </convert>
                                    </fn>
                                   </let>
                                  </att>
                                  <att name='r' flags='l'>
                                   <str val='2'/>
                                  </att>
                                 </sequence>
                                </elem>
                                <elem line='647' name='circle' nsuri='http://www.w3.org/2000/svg' flags='dl'>
                                 <sequence>
                                  <att name='class' flags='l'>
                                   <str val='anchorCircle2'/>
                                  </att>
                                  <att name='cx' flags='l'>
                                   <let var='Q{http://saxon.sf.net/generated-variable}current-963925646' as='1' slot='90' eval='16'>
                                    <dot type='1ADI'/>
                                    <fn name='string'>
                                     <convert from='AO' to='AS'>
                                      <subscript>
                                       <varRef name='Q{}anchor2Xs' slot='71'/>
                                       <varRef name='Q{http://saxon.sf.net/generated-variable}current-963925646' slot='90'/>
                                      </subscript>
                                     </convert>
                                    </fn>
                                   </let>
                                  </att>
                                  <att name='cy' flags='l'>
                                   <let var='Q{http://saxon.sf.net/generated-variable}current-963925646' as='1' slot='91' eval='16'>
                                    <dot type='1ADI'/>
                                    <fn name='string'>
                                     <convert from='AO' to='AS'>
                                      <subscript>
                                       <varRef name='Q{}anchor2Ys' slot='76'/>
                                       <varRef name='Q{http://saxon.sf.net/generated-variable}current-963925646' slot='91'/>
                                      </subscript>
                                     </convert>
                                    </fn>
                                   </let>
                                  </att>
                                  <att name='r' flags='l'>
                                   <str val='2'/>
                                  </att>
                                 </sequence>
                                </elem>
                               </sequence>
                              </forEach>
                             </choose>
                             <elem line='700' name='path' nsuri='http://www.w3.org/2000/svg' flags='dl'>
                              <sequence>
                               <att name='d' flags='l'>
                                <fn name='string-join'>
                                 <sequence line='661'>
                                  <fn name='concat'>
                                   <str val='M'/>
                                   <first>
                                    <varRef name='Q{}xPoints' slot='6'/>
                                   </first>
                                   <str val=','/>
                                   <first>
                                    <varRef name='Q{}yPoints' slot='7'/>
                                   </first>
                                  </fn>
                                  <fn line='674' name='concat'>
                                   <str val='Q'/>
                                   <first>
                                    <varRef name='Q{}anchor1Xs' slot='61'/>
                                   </first>
                                   <str val=','/>
                                   <first>
                                    <varRef name='Q{}anchor1Ys' slot='66'/>
                                   </first>
                                   <str val=' '/>
                                   <subscript>
                                    <varRef name='Q{}xPoints' slot='6'/>
                                    <int val='2'/>
                                   </subscript>
                                   <str val=','/>
                                   <subscript>
                                    <varRef name='Q{}yPoints' slot='7'/>
                                    <int val='2'/>
                                   </subscript>
                                  </fn>
                                  <cvUntyped line='676' to='AS' diag='3|0|XTTE0570|bezierPath'>
                                   <data diag='3|0|XTTE0570|bezierPath'>
                                    <forEach>
                                     <to>
                                      <int val='2'/>
                                      <arith op='-' calc='i-i'>
                                       <fn name='count'>
                                        <varRef name='Q{}xPoints' slot='6'/>
                                       </fn>
                                       <int val='2'/>
                                      </arith>
                                     </to>
                                     <valueOf line='683'>
                                      <fn name='concat'>
                                       <str val='C'/>
                                       <fn name='string-join'>
                                        <sequence>
                                         <let line='678' var='Q{http://saxon.sf.net/generated-variable}current-2147089555' as='1' slot='92' eval='16'>
                                          <dot type='1ADI'/>
                                          <fn name='concat'>
                                           <subscript>
                                            <varRef name='Q{}anchor2Xs' slot='71'/>
                                            <arith op='-' calc='i-i'>
                                             <varRef name='Q{http://saxon.sf.net/generated-variable}current-2147089555' slot='92'/>
                                             <int val='1'/>
                                            </arith>
                                           </subscript>
                                           <str val=','/>
                                           <subscript>
                                            <varRef name='Q{}anchor2Ys' slot='76'/>
                                            <arith op='-' calc='i-i'>
                                             <varRef name='Q{http://saxon.sf.net/generated-variable}current-2147089555' slot='92'/>
                                             <int val='1'/>
                                            </arith>
                                           </subscript>
                                          </fn>
                                         </let>
                                         <let line='680' var='Q{http://saxon.sf.net/generated-variable}current-2147089555' as='1' slot='93' eval='16'>
                                          <dot type='1ADI'/>
                                          <fn name='concat'>
                                           <subscript>
                                            <varRef name='Q{}anchor1Xs' slot='61'/>
                                            <varRef name='Q{http://saxon.sf.net/generated-variable}current-2147089555' slot='93'/>
                                           </subscript>
                                           <str val=','/>
                                           <subscript>
                                            <varRef name='Q{}anchor1Ys' slot='66'/>
                                            <varRef name='Q{http://saxon.sf.net/generated-variable}current-2147089555' slot='93'/>
                                           </subscript>
                                          </fn>
                                         </let>
                                         <let line='682' var='Q{http://saxon.sf.net/generated-variable}current-2147089555' as='1' slot='94' eval='16'>
                                          <dot type='1ADI'/>
                                          <fn name='concat'>
                                           <subscript>
                                            <varRef name='Q{}xPoints' slot='6'/>
                                            <arith op='+' calc='i+i'>
                                             <varRef name='Q{http://saxon.sf.net/generated-variable}current-2147089555' slot='94'/>
                                             <int val='1'/>
                                            </arith>
                                           </subscript>
                                           <str val=','/>
                                           <subscript>
                                            <varRef name='Q{}yPoints' slot='7'/>
                                            <arith op='+' calc='i+i'>
                                             <varRef name='Q{http://saxon.sf.net/generated-variable}current-2147089555' slot='94'/>
                                             <int val='1'/>
                                            </arith>
                                           </subscript>
                                          </fn>
                                         </let>
                                        </sequence>
                                        <str val=' '/>
                                       </fn>
                                      </fn>
                                     </valueOf>
                                    </forEach>
                                   </data>
                                  </cvUntyped>
                                  <fn line='698' name='concat'>
                                   <str val='Q'/>
                                   <lastOf>
                                    <varRef name='Q{}anchor2Xs' slot='71'/>
                                   </lastOf>
                                   <str val=','/>
                                   <lastOf>
                                    <varRef name='Q{}anchor2Ys' slot='76'/>
                                   </lastOf>
                                   <str val=' '/>
                                   <lastOf>
                                    <varRef name='Q{}xPoints' slot='6'/>
                                   </lastOf>
                                   <str val=','/>
                                   <lastOf>
                                    <varRef name='Q{}yPoints' slot='7'/>
                                   </lastOf>
                                  </fn>
                                 </sequence>
                                 <str val=' '/>
                                </fn>
                               </att>
                               <att name='stroke' flags='l'>
                                <str val='black'/>
                               </att>
                               <att name='stroke-width' flags='l'>
                                <str val='1'/>
                               </att>
                               <att name='fill' flags='l'>
                                <str val='none'/>
                               </att>
                              </sequence>
                             </elem>
                            </sequence>
                           </elem>
                           <choose line='702'>
                            <varRef name='Q{}debug' slot='2'/>
                            <ufCall line='705' name='Q{http://www.obdurodon.org}create_diagnostics' tailCall='false' bSlot='1' eval='6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6'>
                             <varRef name='Q{}dirXs' slot='8'/>
                             <varRef name='Q{}dirYs' slot='12'/>
                             <varRef name='Q{}lengths' slot='16'/>
                             <varRef name='Q{}unitXs' slot='21'/>
                             <varRef name='Q{}unitYs' slot='25'/>
                             <varRef name='Q{}normal1Xs' slot='29'/>
                             <varRef name='Q{}normal1Ys' slot='30'/>
                             <varRef name='Q{}normal2Xs' slot='31'/>
                             <varRef name='Q{}normal2Ys' slot='32'/>
                             <varRef name='Q{}angle1s' slot='33'/>
                             <varRef name='Q{}angle2s' slot='37'/>
                             <varRef name='Q{}anchor1Xs' slot='61'/>
                             <varRef name='Q{}anchor1Ys' slot='66'/>
                             <varRef name='Q{}anchor2Xs' slot='71'/>
                             <varRef name='Q{}anchor2Ys' slot='76'/>
                             <varRef name='Q{}totalAnchorLengths' slot='49'/>
                             <varRef name='Q{}inAnchorLengths' slot='53'/>
                             <varRef name='Q{}outAnchorLengths' slot='57'/>
                             <varRef name='Q{}scaling' slot='1'/>
                            </ufCall>
                           </choose>
                          </sequence>
                         </let>
                        </let>
                       </let>
                      </let>
                     </let>
                    </let>
                   </let>
                  </let>
                 </let>
                </let>
               </let>
              </let>
             </let>
            </let>
           </let>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </let>
  </function>
 </co>
 <co id='10' vis='FINAL' binds='8'>
  <function name='Q{http://www.obdurodon.org}bezier' line='712' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+NE' slots='2'>
   <arg name='Q{}inputPoints' as='1AS'/>
   <arg name='Q{}scaling' as='1AO'/>
   <tailCallLoop role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='718'>
    <ufCall name='Q{http://www.obdurodon.org}bezier' tailCall='foreign' bSlot='0' eval='6 6 0'>
     <varRef name='Q{}inputPoints' slot='0'/>
     <varRef name='Q{}scaling' slot='1'/>
     <false/>
    </ufCall>
   </tailCallLoop>
  </function>
 </co>
 <co id='11' vis='PUBLIC' binds=''>
  <globalVariable name='Q{}cRadius' as='1ADI' line='510' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' visibility='PUBLIC'>
   <int val='2'/>
  </globalVariable>
 </co>
 <co id='12' binds=''>
  <function name='Q{http://www.obdurodon.org}create_angle2s' line='182' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='3'>
   <arg name='Q{}normal2Ys' as='+AO'/>
   <arg name='Q{}normal2Xs' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='185' card='+' diag='5|0|XTTE0780|djb:create_angle2s#2'>
    <forEach>
     <to>
      <int val='1'/>
      <fn name='count'>
       <varRef name='Q{}normal2Ys' slot='0'/>
      </fn>
     </to>
     <let line='188' var='Q{http://saxon.sf.net/generated-variable}current-398082312' as='1' slot='2' eval='16'>
      <dot type='1ADI'/>
      <arith op='+' calc='d+d'>
       <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}atan2' type='1AO'>
        <check card='1' diag='0|0||math:atan2'>
         <subscript>
          <varRef name='Q{}normal2Ys' slot='0'/>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current-398082312' slot='2'/>
         </subscript>
        </check>
        <check card='1' diag='0|1||math:atan2'>
         <subscript>
          <varRef name='Q{}normal2Xs' slot='1'/>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current-398082312' slot='2'/>
         </subscript>
        </check>
       </ifCall>
       <dbl val='1.5707963267948966'/>
      </arith>
     </let>
    </forEach>
   </check>
  </function>
 </co>
 <co id='13' vis='FINAL' binds='8'>
  <function name='Q{http://www.obdurodon.org}bezier' line='724' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+NE' slots='1'>
   <arg name='Q{}inputPoints' as='1AS'/>
   <tailCallLoop role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='729'>
    <ufCall name='Q{http://www.obdurodon.org}bezier' tailCall='foreign' bSlot='0' eval='6 0 0'>
     <varRef name='Q{}inputPoints' slot='0'/>
     <dbl val='0.4'/>
     <false/>
    </ufCall>
   </tailCallLoop>
  </function>
 </co>
 <co id='14' binds=''>
  <function name='Q{http://www.obdurodon.org}create_normal2Ys' line='161' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='1'>
   <arg name='Q{}unitXs' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='163' card='+' diag='5|0|XTTE0780|djb:create_normal2Ys#1'>
    <forEach>
     <varRef name='Q{}unitXs' slot='0'/>
     <arith op='*' calc='d*d'>
      <dbl val='-1'/>
      <dot type='1AO'/>
     </arith>
    </forEach>
   </check>
  </function>
 </co>
 <co id='15' binds=''>
  <function name='Q{http://www.obdurodon.org}create_normal2Xs' line='153' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='6' flags='pU' as='+AO' slots='1'>
   <arg name='Q{}unitYs' as='+AO'/>
   <varRef role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='155' name='Q{}unitYs' slot='0'/>
  </function>
 </co>
 <co id='16' binds=''>
  <function name='Q{http://www.obdurodon.org}create_dirXs' line='72' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='3'>
   <arg name='Q{}xPoints' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='74' card='+' diag='5|0|XTTE0780|djb:create_dirXs#1'>
    <forEach>
     <to>
      <int val='1'/>
      <arith op='-' calc='i-i'>
       <fn name='count'>
        <varRef name='Q{}xPoints' slot='0'/>
       </fn>
       <int val='2'/>
      </arith>
     </to>
     <arith line='77' op='-' calc='d-d'>
      <let line='76' var='Q{http://saxon.sf.net/generated-variable}current937206067' as='1' slot='1' eval='16'>
       <dot type='1ADI'/>
       <check card='1' diag='3|0|XTTE0570|x2'>
        <subscript>
         <varRef name='Q{}xPoints' slot='0'/>
         <arith op='+' calc='i+i'>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current937206067' slot='1'/>
          <int val='2'/>
         </arith>
        </subscript>
       </check>
      </let>
      <let line='75' var='Q{http://saxon.sf.net/generated-variable}current1579810278' as='1' slot='2' eval='16'>
       <dot type='1ADI'/>
       <check card='1' diag='3|0|XTTE0570|x1'>
        <subscript>
         <varRef name='Q{}xPoints' slot='0'/>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current1579810278' slot='2'/>
        </subscript>
       </check>
      </let>
     </arith>
    </forEach>
   </check>
  </function>
 </co>
 <co id='17' binds=''>
  <function name='Q{http://www.obdurodon.org}create_totalAnchorLengths' line='232' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='3'>
   <arg name='Q{}lengths' as='+AO'/>
   <arg name='Q{}scaling' as='1AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='235' card='+' diag='5|0|XTTE0780|djb:create_totalAnchorLengths#2'>
    <forEach>
     <to>
      <int val='1'/>
      <fn name='count'>
       <varRef name='Q{}lengths' slot='0'/>
      </fn>
     </to>
     <let line='236' var='Q{http://saxon.sf.net/generated-variable}current-1020357393' as='1' slot='2' eval='16'>
      <dot type='1ADI'/>
      <arith op='*' calc='d*d'>
       <varRef name='Q{}scaling' slot='1'/>
       <subscript>
        <varRef name='Q{}lengths' slot='0'/>
        <varRef name='Q{http://saxon.sf.net/generated-variable}current-1020357393' slot='2'/>
       </subscript>
      </arith>
     </let>
    </forEach>
   </check>
  </function>
 </co>
 <co id='18' binds=''>
  <function name='Q{http://www.obdurodon.org}create_dirYs' line='85' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='3'>
   <arg name='Q{}yPoints' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='87' card='+' diag='5|0|XTTE0780|djb:create_dirYs#1'>
    <forEach>
     <to>
      <int val='1'/>
      <arith op='-' calc='i-i'>
       <fn name='count'>
        <varRef name='Q{}yPoints' slot='0'/>
       </fn>
       <int val='2'/>
      </arith>
     </to>
     <arith line='90' op='-' calc='d-d'>
      <let line='89' var='Q{http://saxon.sf.net/generated-variable}current937206067' as='1' slot='1' eval='16'>
       <dot type='1ADI'/>
       <check card='1' diag='3|0|XTTE0570|y2'>
        <subscript>
         <varRef name='Q{}yPoints' slot='0'/>
         <arith op='+' calc='i+i'>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current937206067' slot='1'/>
          <int val='2'/>
         </arith>
        </subscript>
       </check>
      </let>
      <let line='88' var='Q{http://saxon.sf.net/generated-variable}current1579810278' as='1' slot='2' eval='16'>
       <dot type='1ADI'/>
       <check card='1' diag='3|0|XTTE0570|y1'>
        <subscript>
         <varRef name='Q{}yPoints' slot='0'/>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current1579810278' slot='2'/>
        </subscript>
       </check>
      </let>
     </arith>
    </forEach>
   </check>
  </function>
 </co>
 <co id='19' binds=''>
  <function name='Q{http://www.obdurodon.org}extract_yPoints' line='63' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='1'>
   <arg name='Q{}pointPairs' as='+AS'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='65' card='+' diag='5|0|XTTE0780|djb:extract_yPoints#1'>
    <forEach>
     <forEach>
      <varRef name='Q{}pointPairs' slot='0'/>
      <fn name='substring-after'>
       <dot type='1AS'/>
       <str val=','/>
      </fn>
     </forEach>
     <cast flags='a' as='1AO'>
      <dot type='1AS'/>
     </cast>
    </forEach>
   </check>
  </function>
 </co>
 <co id='20' binds=''>
  <function name='Q{http://www.obdurodon.org}extract_xPoints' line='54' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='1'>
   <arg name='Q{}pointPairs' as='+AS'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='56' card='+' diag='5|0|XTTE0780|djb:extract_xPoints#1'>
    <forEach>
     <forEach>
      <varRef name='Q{}pointPairs' slot='0'/>
      <fn name='substring-before'>
       <dot type='1AS'/>
       <str val=','/>
      </fn>
     </forEach>
     <cast flags='a' as='1AO'>
      <dot type='1AS'/>
     </cast>
    </forEach>
   </check>
  </function>
 </co>
 <co id='21' binds=''>
  <function name='Q{http://www.obdurodon.org}create_angle1s' line='169' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='3'>
   <arg name='Q{}normal1Ys' as='+AO'/>
   <arg name='Q{}normal1Xs' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='172' card='+' diag='5|0|XTTE0780|djb:create_angle1s#2'>
    <forEach>
     <to>
      <int val='1'/>
      <fn name='count'>
       <varRef name='Q{}normal1Ys' slot='0'/>
      </fn>
     </to>
     <let line='175' var='Q{http://saxon.sf.net/generated-variable}current-398082312' as='1' slot='2' eval='16'>
      <dot type='1ADI'/>
      <arith op='+' calc='d+d'>
       <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}atan2' type='1AO'>
        <check card='1' diag='0|0||math:atan2'>
         <subscript>
          <varRef name='Q{}normal1Ys' slot='0'/>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current-398082312' slot='2'/>
         </subscript>
        </check>
        <check card='1' diag='0|1||math:atan2'>
         <subscript>
          <varRef name='Q{}normal1Xs' slot='1'/>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current-398082312' slot='2'/>
         </subscript>
        </check>
       </ifCall>
       <dbl val='1.5707963267948966'/>
      </arith>
     </let>
    </forEach>
   </check>
  </function>
 </co>
 <co id='9' binds=''>
  <function name='Q{http://www.obdurodon.org}create_diagnostics' line='339' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='9' flags='pU' as='1NE nQ{http://www.w3.org/1999/xhtml}html' slots='35'>
   <arg name='Q{}dirXs' as='+AO'/>
   <arg name='Q{}dirYs' as='+AO'/>
   <arg name='Q{}lengths' as='+AO'/>
   <arg name='Q{}unitXs' as='+AO'/>
   <arg name='Q{}unitYs' as='+AO'/>
   <arg name='Q{}normal1Xs' as='+AO'/>
   <arg name='Q{}normal1Ys' as='+AO'/>
   <arg name='Q{}normal2Xs' as='+AO'/>
   <arg name='Q{}normal2Ys' as='+AO'/>
   <arg name='Q{}angle1s' as='+AO'/>
   <arg name='Q{}angle2s' as='+AO'/>
   <arg name='Q{}anchor1Xs' as='+AO'/>
   <arg name='Q{}anchor1Ys' as='+AO'/>
   <arg name='Q{}anchor2Xs' as='+AO'/>
   <arg name='Q{}anchor2Ys' as='+AO'/>
   <arg name='Q{}totalAnchorLengths' as='+AO'/>
   <arg name='Q{}inAnchorLengths' as='+AO'/>
   <arg name='Q{}outAnchorLengths' as='+AO'/>
   <arg name='Q{}scaling' as='1AO'/>
   <elem role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/1999/xhtml djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='359' name='html' nsuri='http://www.w3.org/1999/xhtml' flags='d'>
    <sequence line='360'>
     <elem name='head' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
      <sequence line='361'>
       <elem name='title' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
        <valueOf flags='Sl'>
         <str val='Diagnostics'/>
        </valueOf>
       </elem>
       <elem line='362' name='style' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
        <sequence>
         <att name='type' flags='l'>
          <str val='text/css'/>
         </att>
         <valueOf flags='l'>
          <str val=' table, tr, th, td { border: 1px black solid; } table {&#xA;                    border-collapse: collapse; } tr:nth-child(even) { background-color: lightgray; }&#xA;                    th, td { padding: 4px; }'/>
         </valueOf>
        </sequence>
       </elem>
      </sequence>
     </elem>
     <elem line='366' name='body' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
      <elem line='367' name='table' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
       <sequence>
        <att name='style' flags='l'>
         <str val='text-align: right;'/>
        </att>
        <elem line='368' name='tr' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
         <sequence>
          <att name='style' flags='l'>
           <str val='text-align: center;'/>
          </att>
          <elem line='369' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <valueOf flags='Sl'>
            <str val='#'/>
           </valueOf>
          </elem>
          <elem line='370' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <valueOf flags='Sl'>
            <str val='dirX'/>
           </valueOf>
          </elem>
          <elem line='371' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <valueOf flags='Sl'>
            <str val='dirY'/>
           </valueOf>
          </elem>
          <elem line='372' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <sequence>
            <valueOf flags='Sl'>
             <str val='joining'/>
            </valueOf>
            <elem name='br' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
             <empty/>
            </elem>
            <valueOf flags='Sl'>
             <str val='length'/>
            </valueOf>
           </sequence>
          </elem>
          <elem line='373' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <valueOf flags='Sl'>
            <str val='unitX'/>
           </valueOf>
          </elem>
          <elem line='374' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <valueOf flags='Sl'>
            <str val='unitY'/>
           </valueOf>
          </elem>
          <elem line='375' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <valueOf flags='Sl'>
            <str val='normal1'/>
           </valueOf>
          </elem>
          <elem line='376' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <valueOf flags='Sl'>
            <str val='normal2'/>
           </valueOf>
          </elem>
          <elem line='377' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <valueOf flags='Sl'>
            <str val='angle1'/>
           </valueOf>
          </elem>
          <elem line='378' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <valueOf flags='Sl'>
            <str val='angle2'/>
           </valueOf>
          </elem>
          <elem line='379' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <valueOf flags='Sl'>
            <str val='anchor1X'/>
           </valueOf>
          </elem>
          <elem line='380' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <valueOf flags='Sl'>
            <str val='anchor1Y'/>
           </valueOf>
          </elem>
          <elem line='381' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <valueOf flags='Sl'>
            <str val='anchor2X'/>
           </valueOf>
          </elem>
          <elem line='382' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <valueOf flags='Sl'>
            <str val='anchor2Y'/>
           </valueOf>
          </elem>
          <elem line='383' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <sequence>
            <valueOf flags='Sl'>
             <str val='scaling'/>
            </valueOf>
            <elem name='br' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
             <empty/>
            </elem>
            <valueOf flags='Sl'>
             <str val='(constant)'/>
            </valueOf>
           </sequence>
          </elem>
          <elem line='384' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <sequence>
            <valueOf flags='l'>
             <str val='total anchor'/>
            </valueOf>
            <elem name='br' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
             <empty/>
            </elem>
            <valueOf flags='Sl'>
             <str val='length'/>
            </valueOf>
           </sequence>
          </elem>
          <elem line='385' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <sequence>
            <valueOf flags='Sl'>
             <str val='anchorLength1'/>
            </valueOf>
            <elem name='br' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
             <empty/>
            </elem>
            <valueOf flags='Sl'>
             <str val='(in)'/>
            </valueOf>
           </sequence>
          </elem>
          <elem line='386' name='th' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
           <sequence>
            <valueOf flags='Sl'>
             <str val='anchorLength2'/>
            </valueOf>
            <elem name='br' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
             <empty/>
            </elem>
            <valueOf flags='Sl'>
             <str val='(out)'/>
            </valueOf>
           </sequence>
          </elem>
         </sequence>
        </elem>
        <forEach line='388'>
         <to>
          <int val='1'/>
          <fn name='count'>
           <varRef name='Q{}dirXs' slot='0'/>
          </fn>
         </to>
         <elem line='389' name='tr' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
          <sequence line='391'>
           <elem name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <dot line='392' type='1ADI'/>
           </elem>
           <elem line='395' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='396' var='Q{http://saxon.sf.net/generated-variable}current-856583674' as='1' slot='19' eval='16'>
             <dot type='1ADI'/>
             <subscript>
              <varRef name='Q{}dirXs' slot='0'/>
              <varRef name='Q{http://saxon.sf.net/generated-variable}current-856583674' slot='19'/>
             </subscript>
            </let>
           </elem>
           <elem line='399' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='400' var='Q{http://saxon.sf.net/generated-variable}current-856583674' as='1' slot='20' eval='16'>
             <dot type='1ADI'/>
             <subscript>
              <varRef name='Q{}dirYs' slot='1'/>
              <varRef name='Q{http://saxon.sf.net/generated-variable}current-856583674' slot='20'/>
             </subscript>
            </let>
           </elem>
           <elem line='403' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='405' var='Q{http://saxon.sf.net/generated-variable}current1234250905' as='1' slot='21' eval='16'>
             <dot type='1ADI'/>
             <forEach>
              <subscript>
               <varRef name='Q{}lengths' slot='2'/>
               <varRef name='Q{http://saxon.sf.net/generated-variable}current1234250905' slot='21'/>
              </subscript>
              <fn name='format-number'>
               <dot type='1AO'/>
               <str val='#.00'/>
              </fn>
             </forEach>
            </let>
           </elem>
           <elem line='408' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='410' var='Q{http://saxon.sf.net/generated-variable}current16868310' as='1' slot='22' eval='16'>
             <dot type='1ADI'/>
             <forEach>
              <subscript>
               <varRef name='Q{}unitXs' slot='3'/>
               <varRef name='Q{http://saxon.sf.net/generated-variable}current16868310' slot='22'/>
              </subscript>
              <fn name='format-number'>
               <dot type='1AO'/>
               <str val='0.00'/>
              </fn>
             </forEach>
            </let>
           </elem>
           <elem line='413' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='415' var='Q{http://saxon.sf.net/generated-variable}current769530879' as='1' slot='23' eval='16'>
             <dot type='1ADI'/>
             <forEach>
              <subscript>
               <varRef name='Q{}unitYs' slot='4'/>
               <varRef name='Q{http://saxon.sf.net/generated-variable}current769530879' slot='23'/>
              </subscript>
              <fn name='format-number'>
               <dot type='1AO'/>
               <str val='0.00'/>
              </fn>
             </forEach>
            </let>
           </elem>
           <elem line='418' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='427' var='Q{http://saxon.sf.net/generated-variable}current-1779202169' as='1' slot='24' eval='16'>
             <dot type='1ADI'/>
             <fn name='string-join'>
              <sequence>
               <forEach>
                <subscript>
                 <varRef name='Q{}normal1Xs' slot='5'/>
                 <varRef name='Q{http://saxon.sf.net/generated-variable}current-1779202169' slot='24'/>
                </subscript>
                <fn name='format-number'>
                 <dot type='1AO'/>
                 <str val='0.00'/>
                </fn>
               </forEach>
               <forEach>
                <subscript>
                 <varRef name='Q{}normal1Ys' slot='6'/>
                 <varRef name='Q{http://saxon.sf.net/generated-variable}current-1779202169' slot='24'/>
                </subscript>
                <fn name='format-number'>
                 <dot type='1AO'/>
                 <str val='0.00'/>
                </fn>
               </forEach>
              </sequence>
              <str val=', '/>
             </fn>
            </let>
           </elem>
           <elem line='430' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='439' var='Q{http://saxon.sf.net/generated-variable}current-716794803' as='1' slot='25' eval='16'>
             <dot type='1ADI'/>
             <fn name='string-join'>
              <sequence>
               <forEach>
                <subscript>
                 <varRef name='Q{}normal2Xs' slot='7'/>
                 <varRef name='Q{http://saxon.sf.net/generated-variable}current-716794803' slot='25'/>
                </subscript>
                <fn name='format-number'>
                 <dot type='1AO'/>
                 <str val='0.00'/>
                </fn>
               </forEach>
               <forEach>
                <subscript>
                 <varRef name='Q{}normal2Ys' slot='8'/>
                 <varRef name='Q{http://saxon.sf.net/generated-variable}current-716794803' slot='25'/>
                </subscript>
                <fn name='format-number'>
                 <dot type='1AO'/>
                 <str val='0.00'/>
                </fn>
               </forEach>
              </sequence>
              <str val=', '/>
             </fn>
            </let>
           </elem>
           <elem line='442' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='444' var='Q{http://saxon.sf.net/generated-variable}current1604002113' as='1' slot='26' eval='16'>
             <dot type='1ADI'/>
             <forEach>
              <subscript>
               <varRef name='Q{}angle1s' slot='9'/>
               <varRef name='Q{http://saxon.sf.net/generated-variable}current1604002113' slot='26'/>
              </subscript>
              <fn name='format-number'>
               <dot type='1AO'/>
               <str val='0.00'/>
              </fn>
             </forEach>
            </let>
           </elem>
           <elem line='447' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='449' var='Q{http://saxon.sf.net/generated-variable}current38262958' as='1' slot='27' eval='16'>
             <dot type='1ADI'/>
             <forEach>
              <subscript>
               <varRef name='Q{}angle2s' slot='10'/>
               <varRef name='Q{http://saxon.sf.net/generated-variable}current38262958' slot='27'/>
              </subscript>
              <fn name='format-number'>
               <dot type='1AO'/>
               <str val='0.00'/>
              </fn>
             </forEach>
            </let>
           </elem>
           <elem line='452' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='454' var='Q{http://saxon.sf.net/generated-variable}current1217875525' as='1' slot='28' eval='16'>
             <dot type='1ADI'/>
             <forEach>
              <subscript>
               <varRef name='Q{}anchor1Xs' slot='11'/>
               <varRef name='Q{http://saxon.sf.net/generated-variable}current1217875525' slot='28'/>
              </subscript>
              <fn name='format-number'>
               <dot type='1AO'/>
               <str val='0.00'/>
              </fn>
             </forEach>
            </let>
           </elem>
           <elem line='457' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='459' var='Q{http://saxon.sf.net/generated-variable}current1787079037' as='1' slot='29' eval='16'>
             <dot type='1ADI'/>
             <forEach>
              <subscript>
               <varRef name='Q{}anchor1Ys' slot='12'/>
               <varRef name='Q{http://saxon.sf.net/generated-variable}current1787079037' slot='29'/>
              </subscript>
              <fn name='format-number'>
               <dot type='1AO'/>
               <str val='0.00'/>
              </fn>
             </forEach>
            </let>
           </elem>
           <elem line='462' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='464' var='Q{http://saxon.sf.net/generated-variable}current1813187653' as='1' slot='30' eval='16'>
             <dot type='1ADI'/>
             <forEach>
              <subscript>
               <varRef name='Q{}anchor2Xs' slot='13'/>
               <varRef name='Q{http://saxon.sf.net/generated-variable}current1813187653' slot='30'/>
              </subscript>
              <fn name='format-number'>
               <dot type='1AO'/>
               <str val='0.00'/>
              </fn>
             </forEach>
            </let>
           </elem>
           <elem line='467' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='469' var='Q{http://saxon.sf.net/generated-variable}current1353530305' as='1' slot='31' eval='16'>
             <dot type='1ADI'/>
             <forEach>
              <subscript>
               <varRef name='Q{}anchor2Ys' slot='14'/>
               <varRef name='Q{http://saxon.sf.net/generated-variable}current1353530305' slot='31'/>
              </subscript>
              <fn name='format-number'>
               <dot type='1AO'/>
               <str val='0.00'/>
              </fn>
             </forEach>
            </let>
           </elem>
           <elem line='472' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <varRef line='473' name='Q{}scaling' slot='18'/>
           </elem>
           <elem line='476' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='479' var='Q{http://saxon.sf.net/generated-variable}current574268151' as='1' slot='32' eval='16'>
             <dot type='1ADI'/>
             <forEach>
              <subscript>
               <varRef name='Q{}totalAnchorLengths' slot='15'/>
               <varRef name='Q{http://saxon.sf.net/generated-variable}current574268151' slot='32'/>
              </subscript>
              <fn name='format-number'>
               <dot type='1AO'/>
               <str val='0.00'/>
              </fn>
             </forEach>
            </let>
           </elem>
           <elem line='482' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='485' var='Q{http://saxon.sf.net/generated-variable}current1832532108' as='1' slot='33' eval='16'>
             <dot type='1ADI'/>
             <forEach>
              <subscript>
               <varRef name='Q{}inAnchorLengths' slot='16'/>
               <varRef name='Q{http://saxon.sf.net/generated-variable}current1832532108' slot='33'/>
              </subscript>
              <fn name='format-number'>
               <dot type='1AO'/>
               <str val='0.00'/>
              </fn>
             </forEach>
            </let>
           </elem>
           <elem line='488' name='td' nsuri='http://www.w3.org/1999/xhtml' flags='dl'>
            <let line='491' var='Q{http://saxon.sf.net/generated-variable}current423583818' as='1' slot='34' eval='16'>
             <dot type='1ADI'/>
             <forEach>
              <subscript>
               <varRef name='Q{}outAnchorLengths' slot='17'/>
               <varRef name='Q{http://saxon.sf.net/generated-variable}current423583818' slot='34'/>
              </subscript>
              <fn name='format-number'>
               <dot type='1AO'/>
               <str val='0.00'/>
              </fn>
             </forEach>
            </let>
           </elem>
          </sequence>
         </elem>
        </forEach>
       </sequence>
      </elem>
     </elem>
    </sequence>
   </elem>
  </function>
 </co>
 <co id='22' binds=''>
  <function name='Q{http://www.obdurodon.org}create_outAnchorLengths' line='259' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='3'>
   <arg name='Q{}totalAnchorLengths' as='+AO'/>
   <arg name='Q{}segLengths' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='262' card='+' diag='5|0|XTTE0780|djb:create_outAnchorLengths#2'>
    <forEach>
     <to>
      <int val='1'/>
      <fn name='count'>
       <varRef name='Q{}totalAnchorLengths' slot='0'/>
      </fn>
     </to>
     <let line='268' var='Q{http://saxon.sf.net/generated-variable}current66517512' as='1' slot='2' eval='16'>
      <dot type='1ADI'/>
      <arith op='div' calc='d/d'>
       <arith op='*' calc='d*d'>
        <subscript>
         <varRef name='Q{}totalAnchorLengths' slot='0'/>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current66517512' slot='2'/>
        </subscript>
        <subscript>
         <varRef name='Q{}segLengths' slot='1'/>
         <arith op='+' calc='i+i'>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current66517512' slot='2'/>
          <int val='1'/>
         </arith>
        </subscript>
       </arith>
       <arith op='+' calc='d+d'>
        <subscript>
         <varRef name='Q{}segLengths' slot='1'/>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current66517512' slot='2'/>
        </subscript>
        <subscript>
         <varRef name='Q{}segLengths' slot='1'/>
         <arith op='+' calc='i+i'>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current66517512' slot='2'/>
          <int val='1'/>
         </arith>
        </subscript>
       </arith>
      </arith>
     </let>
    </forEach>
   </check>
  </function>
 </co>
 <co id='23' binds=''>
  <function name='Q{http://www.obdurodon.org}create_yLengths' line='209' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='2'>
   <arg name='Q{}yPoints' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='211' card='+' diag='5|0|XTTE0780|djb:create_yLengths#1'>
    <forEach>
     <to>
      <int val='1'/>
      <arith op='-' calc='i-i'>
       <fn name='count'>
        <varRef name='Q{}yPoints' slot='0'/>
       </fn>
       <int val='1'/>
      </arith>
     </to>
     <let line='212' var='Q{http://saxon.sf.net/generated-variable}current2030096647' as='1' slot='1' eval='16'>
      <dot type='1ADI'/>
      <arith op='-' calc='d-d'>
       <subscript>
        <varRef name='Q{}yPoints' slot='0'/>
        <arith op='+' calc='i+i'>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096647' slot='1'/>
         <int val='1'/>
        </arith>
       </subscript>
       <subscript>
        <varRef name='Q{}yPoints' slot='0'/>
        <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096647' slot='1'/>
       </subscript>
      </arith>
     </let>
    </forEach>
   </check>
  </function>
 </co>
 <co id='24' binds=''>
  <function name='Q{http://www.obdurodon.org}create_xLengths' line='199' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='2'>
   <arg name='Q{}xPoints' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='201' card='+' diag='5|0|XTTE0780|djb:create_xLengths#1'>
    <forEach>
     <to>
      <int val='1'/>
      <arith op='-' calc='i-i'>
       <fn name='count'>
        <varRef name='Q{}xPoints' slot='0'/>
       </fn>
       <int val='1'/>
      </arith>
     </to>
     <let line='202' var='Q{http://saxon.sf.net/generated-variable}current2030096647' as='1' slot='1' eval='16'>
      <dot type='1ADI'/>
      <arith op='-' calc='d-d'>
       <subscript>
        <varRef name='Q{}xPoints' slot='0'/>
        <arith op='+' calc='i+i'>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096647' slot='1'/>
         <int val='1'/>
        </arith>
       </subscript>
       <subscript>
        <varRef name='Q{}xPoints' slot='0'/>
        <varRef name='Q{http://saxon.sf.net/generated-variable}current2030096647' slot='1'/>
       </subscript>
      </arith>
     </let>
    </forEach>
   </check>
  </function>
 </co>
 <co id='25' binds=''>
  <function name='Q{http://www.obdurodon.org}create_anchor2Ys' line='323' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='4'>
   <arg name='Q{}yPoints' as='+AO'/>
   <arg name='Q{}angle2s' as='+AO'/>
   <arg name='Q{}outAnchorLengths' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='327' card='+' diag='5|0|XTTE0780|djb:create_anchor2Ys#3'>
    <forEach>
     <to>
      <int val='1'/>
      <fn name='count'>
       <varRef name='Q{}angle2s' slot='1'/>
      </fn>
     </to>
     <let line='332' var='Q{http://saxon.sf.net/generated-variable}current1044477079' as='1' slot='3' eval='16'>
      <dot type='1ADI'/>
      <arith op='+' calc='d+d'>
       <subscript>
        <varRef name='Q{}yPoints' slot='0'/>
        <arith op='+' calc='i+i'>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current1044477079' slot='3'/>
         <int val='1'/>
        </arith>
       </subscript>
       <arith op='*' calc='d*d'>
        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}sin' type='?AO'>
         <subscript>
          <varRef name='Q{}angle2s' slot='1'/>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current1044477079' slot='3'/>
         </subscript>
        </ifCall>
        <subscript>
         <varRef name='Q{}outAnchorLengths' slot='2'/>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current1044477079' slot='3'/>
        </subscript>
       </arith>
      </arith>
     </let>
    </forEach>
   </check>
  </function>
 </co>
 <co id='26' binds=''>
  <function name='Q{http://www.obdurodon.org}create_anchor2Xs' line='307' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='4'>
   <arg name='Q{}xPoints' as='+AO'/>
   <arg name='Q{}angle2s' as='+AO'/>
   <arg name='Q{}outAnchorLengths' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='311' card='+' diag='5|0|XTTE0780|djb:create_anchor2Xs#3'>
    <forEach>
     <to>
      <int val='1'/>
      <fn name='count'>
       <varRef name='Q{}angle2s' slot='1'/>
      </fn>
     </to>
     <let line='316' var='Q{http://saxon.sf.net/generated-variable}current1044526231' as='1' slot='3' eval='16'>
      <dot type='1ADI'/>
      <arith op='+' calc='d+d'>
       <subscript>
        <varRef name='Q{}xPoints' slot='0'/>
        <arith op='+' calc='i+i'>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current1044526231' slot='3'/>
         <int val='1'/>
        </arith>
       </subscript>
       <arith op='*' calc='d*d'>
        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/math}cos' type='?AO'>
         <subscript>
          <varRef name='Q{}angle2s' slot='1'/>
          <varRef name='Q{http://saxon.sf.net/generated-variable}current1044526231' slot='3'/>
         </subscript>
        </ifCall>
        <subscript>
         <varRef name='Q{}outAnchorLengths' slot='2'/>
         <varRef name='Q{http://saxon.sf.net/generated-variable}current1044526231' slot='3'/>
        </subscript>
       </arith>
      </arith>
     </let>
    </forEach>
   </check>
  </function>
 </co>
 <co id='27' binds=''>
  <function name='Q{http://www.obdurodon.org}create_unitXs' line='113' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='3'>
   <arg name='Q{}dirXs' as='+AO'/>
   <arg name='Q{}lengths' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='116' card='+' diag='5|0|XTTE0780|djb:create_unitXs#2'>
    <forEach>
     <to>
      <int val='1'/>
      <fn name='count'>
       <varRef name='Q{}dirXs' slot='0'/>
      </fn>
     </to>
     <let line='117' var='Q{http://saxon.sf.net/generated-variable}current66517518' as='1' slot='2' eval='16'>
      <dot type='1ADI'/>
      <arith op='div' calc='d/d'>
       <subscript>
        <varRef name='Q{}dirXs' slot='0'/>
        <varRef name='Q{http://saxon.sf.net/generated-variable}current66517518' slot='2'/>
       </subscript>
       <subscript>
        <varRef name='Q{}lengths' slot='1'/>
        <varRef name='Q{http://saxon.sf.net/generated-variable}current66517518' slot='2'/>
       </subscript>
      </arith>
     </let>
    </forEach>
   </check>
  </function>
 </co>
 <co id='28' binds=''>
  <function name='Q{http://www.obdurodon.org}create_normal1Ys' line='145' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='6' flags='pU' as='+AO' slots='1'>
   <arg name='Q{}unitXs' as='+AO'/>
   <varRef role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='147' name='Q{}unitXs' slot='0'/>
  </function>
 </co>
 <co id='29' binds=''>
  <function name='Q{http://www.obdurodon.org}create_normal1Xs' line='137' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='1'>
   <arg name='Q{}unitYs' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='139' card='+' diag='5|0|XTTE0780|djb:create_normal1Xs#1'>
    <forEach>
     <varRef name='Q{}unitYs' slot='0'/>
     <arith op='*' calc='d*d'>
      <dbl val='-1'/>
      <dot type='1AO'/>
     </arith>
    </forEach>
   </check>
  </function>
 </co>
 <co id='30' binds=''>
  <function name='Q{http://www.obdurodon.org}create_unitYs' line='125' module='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' eval='4' flags='pU' as='+AO' slots='3'>
   <arg name='Q{}dirYs' as='+AO'/>
   <arg name='Q{}lengths' as='+AO'/>
   <check role='body' baseUri='file:/Users/djb/repos/xstuff/bezier/bezier.xsl' ns='=http://www.w3.org/2000/svg djb=http://www.obdurodon.org html=http://www.w3.org/1999/xhtml math=~ svg=http://www.w3.org/2000/svg xs=~ xsl=~ xml=~' line='128' card='+' diag='5|0|XTTE0780|djb:create_unitYs#2'>
    <forEach>
     <to>
      <int val='1'/>
      <fn name='count'>
       <varRef name='Q{}dirYs' slot='0'/>
      </fn>
     </to>
     <let line='129' var='Q{http://saxon.sf.net/generated-variable}current66517518' as='1' slot='2' eval='16'>
      <dot type='1ADI'/>
      <arith op='div' calc='d/d'>
       <subscript>
        <varRef name='Q{}dirYs' slot='0'/>
        <varRef name='Q{http://saxon.sf.net/generated-variable}current66517518' slot='2'/>
       </subscript>
       <subscript>
        <varRef name='Q{}lengths' slot='1'/>
        <varRef name='Q{http://saxon.sf.net/generated-variable}current66517518' slot='2'/>
       </subscript>
      </arith>
     </let>
    </forEach>
   </check>
  </function>
 </co>
 <co id='31' binds=''>
  <mode onNo='TC' flags='dWe' patternSlots='0'/>
 </co>
 <overridden/>
 <output>
  <property name='Q{http://saxon.sf.net/}stylesheet-version' value='30'/>
 </output>
 <decimalFormat/>
</package>
<?Σ 5bffe644?>
